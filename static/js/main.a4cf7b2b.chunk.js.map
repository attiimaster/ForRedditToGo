{"version":3,"sources":["helpers/history.js","helpers/accesstoken.js","helpers/tokenIsValid.js","services/user.service.js","helpers/getHashValue.js","services/auth.service.js","components/ToFrontpageBtn.jsx","containers/About.jsx","helpers/convertToHoursAgo.js","components/AuthorHeader.jsx","helpers/spaceOutNumber.js","components/ThreadStatsBox.jsx","services/speech.service.js","components/ThreadBox.jsx","components/ErrorBox.jsx","components/LoadingScreen.jsx","components/SortBox.jsx","containers/Sub.jsx","helpers/print.js","containers/Synth.jsx","components/MoreButton.jsx","helpers/decodeHtml.js","containers/Thread.jsx","containers/Search.jsx","containers/Frontpage.jsx","components/UserBox.jsx","components/NavBar.jsx","components/SubRedditTab.jsx","App.js","registerServiceWorker.js","index.js"],"names":["createBrowserHistory","accesstoken","get","JSON","parse","localStorage","getItem","set","token","setItem","stringify","remove","removeItem","tokenIsValid","timeRemaining","expires_in","Date","now","console","log","determineSorting","params","generalParam","value","topOfAllParam","concat","top","searchReddit","_x","_searchReddit","apply","this","arguments","_callee","query","subreddits","posts","regenerator_default","a","wrap","_context","prev","next","fetchReddit","sent","abrupt","stop","fetchFrontpage","mySubreddits","sortParams","map","sub","data","display_name","join","fetchSubreddit","subreddit","fetchRedditThread","id","fetchUserData","Promise","all","fetchWithToken","castVote","dir","postWithToken","_x2","_fetchReddit","_callee2","path","res","_context2","fetch","status","json","_x3","_x4","_fetchWithToken","_callee3","options","_context3","reject","headers","Authorization","_x5","_postWithToken","_callee4","_context4","method","fetchMoreAndInsert","_x6","_x7","_x8","_x9","_fetchMoreAndInsert","_callee5","link_id","children","listing","parentId","_context5","findInListingAndInsert","substring","things","ArraytoInsert","resolve","forEach","comment","i","kind","replies","pop","toInsert","push","findIdInRepliesAndInsert","child","then","catch","err","error","getHashValue","key","matches","window","location","hash","match","RegExp","tryLogin","state","newToken","Number","process","REACT_APP_SECRET_STRING","logout","history","ToFrontpageBtn","react_default","createElement","className","Link","to","About","About_Banner","About_Sections","Banner","alt","src","Sections","components_ToFrontpageBtn","href","target","rel","convertToHoursAgo","converted","Math","round","indexOf","slice","AuthorHeader","props","r","author","date","hoursAgoStr","spaceOutNumber","nbr","toString","split","digit","length","no","alert","synth","voice","ThreadStatsBox","_ref","handleVote","type","num_comments","name","onClick","score","ThreadStatsBox_MediaLink","url","MediaLink","_ref2","ThreadBox","components_AuthorHeader","subreddit_name_prefixed","created_utc","title","selftext","components_ThreadStatsBox","ErrorBox","LoadingScreen","SortBox","onChange","values","active","defaultValue","v","toLowerCase","topValues","Sub","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentSub","loading","sort","handleSort","bind","assertThisInitialized","_this2","pathname","setState","_this3","_this$state","e","_this4","form","attributes","_this5","_this$state2","components_LoadingScreen","components_SortBox","c","components_ThreadBox","assign","components_ErrorBox","Component","print","toPrint","document","getElementById","insertAdjacentHTML","tries","loadVoices","voices","getVoices","find","test","lang","setTimeout","convertListingToScript","readmode","script","post","comments","cleanString","body","pushReplies","str","replace","speechSynthesis","Synth","logIsOpen","position","isOn","handleLog","handleReadMode","play","back","skip","speaking","cancel","mapScriptToUtteranceQueue","previous","_this$state3","_this$state4","Synth_SynthBtn","icon","SynthBtn","done","text","message","speech","SpeechSynthesisUtterance","volume","rate","pitch","addEventListener","onstart","onend","onpause","onresume","onerror","speak","readOut","MoreButton","parent_id","decodeHtml","html","txt","innerHTML","Thread","toRead","handleMore","newListing","threadInfo","containers_Synth","Thread_ThreadHead","Thread_CommentBox","ThreadHead","selftext_html","Parser","CommentBox","body_html","components_MoreButton","count","Search","getMoreSubreddits","newQuery","Search_SubRedditBoxAlt","style","width","margin","SubRedditBoxAlt","_ref3","backgroundImage","community_icon","icon_img","display_name_prefixed","subscribers","public_description","Frontpage","_this$props","loggedIn","_this$props2","UserBox","user","UserBox_ActualUserBox","UserBox_LoginButton","ActualUserBox","karma","img","LoginButton","_process$env","REACT_APP_DURATION","REACT_APP_SCOPE","CLIENT_ID","REACT_APP_CLIENT_ID","URI","REACT_APP_URI","NavBar","isHidden","onScroll","scrollY","removeEventListener","handleSideBar","onSubmit","placeholder","components_UserBox","SubRedditTab","isOpen","SubRedditTab_SubRedditBox","SubRedditBox","uri","App","sidebarIsOpen","handleSearch","preventDefault","sanitizedUser","comment_karma","Router","components_NavBar","components_SubRedditTab","Switch","Route","exact","render","containers_Frontpage","component","LoginSuccess","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App_0","URL","origin","response","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a4cf7b2b.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();","// accesstoken methods\r\n\r\nexport default {\r\n\tget,\r\n\tset,\r\n\tremove\r\n}\r\n\r\nfunction set(token) {\r\n    localStorage.setItem(\"access_token\", JSON.stringify(token));\r\n}\r\n\r\nfunction get() {\r\n\treturn JSON.parse(localStorage.getItem(\"access_token\"));\r\n}\r\n\r\nfunction remove() {\r\n\tlocalStorage.removeItem(\"access_token\");\r\n}","function tokenIsValid(token) {\r\n  const timeRemaining = token.expires_in - (Date.now() / 1000);\r\n  \r\n  if (timeRemaining > 0) {\r\n    console.log(\"timeRemaining:\", timeRemaining + \" sec\");\r\n    return true;\r\n  }    \r\n\r\n  return false;\r\n}\r\n\r\nexport default tokenIsValid;\r\n \r\n\r\n/* \r\nconsole.log(\r\n  \ttokenIsValid({\r\n  \t\tvalue: \"string\",\r\n  \t\texpires_in: Date.now() / 1000 + 3600\r\n  \t})\r\n)\r\n  \r\nconsole.log(\r\n  \ttokenIsValid({\r\n  \t\tvalue: \"string\",\r\n  \t\texpires_in: Date.now() / 1000\r\n  \t})\r\n)\r\n*/","import accesstoken from \"../helpers/accesstoken\";\r\nimport tokenIsValid from \"../helpers/tokenIsValid\";\r\n\r\nexport default {\r\n\tfetchFrontpage,\r\n\tfetchSubreddit,\r\n\tfetchRedditThread,\r\n\tfetchUserData,\r\n\tfetchReddit,\r\n\tfetchWithToken,\r\n\tpostWithToken,\r\n\tfetchMoreAndInsert\r\n}\r\n\r\n// search\r\n\r\n// sort\r\nfunction determineSorting(params) {\r\n\t// also submits parameters like limit oder .json, schlechter name\r\n\tconst generalParam = params ? params.value : \"\";\r\n    const topOfAllParam = generalParam === \"top\" ? `&t=${params.top}` : \"\";\r\n\r\n    return `/${generalParam}.json?limit=100${topOfAllParam}`;\r\n}\r\n\r\n// \r\nfunction getRecommendedSubreddits() {\r\n\treturn [\"askreddit\", \"showerthoughts\"];\r\n}\r\n\r\n\r\n// =========== api ============\r\n\r\nexport async function searchReddit(query) {\r\n    const subreddits = await fetchReddit(`/subreddits/search.json?q=${query}&limit=5`);\r\n   \tconst posts = await fetchReddit(`/search.json?q=${query}`);\r\n\r\n   \treturn { subreddits, posts };\r\n}\r\n\r\nexport function fetchFrontpage(mySubreddits, sortParams) {\r\n    // if user has no subreddits or is not logged in, populate frontpage with predetermined subreddits\r\n    mySubreddits = mySubreddits ?\r\n    \tmySubreddits.map(sub => sub.data.display_name)\r\n    \t:\r\n    \tgetRecommendedSubreddits();\r\n\r\n    return fetchReddit(`/r/${mySubreddits.join(\"+\")}${determineSorting(sortParams)}`)\r\n}\r\n\r\nexport function fetchSubreddit(subreddit, sortParams) {\r\n  \treturn fetchReddit(`/r/${subreddit}${determineSorting(sortParams)}`);\r\n}\r\n\r\nexport function fetchRedditThread(subreddit, id, sortParams) {\r\n  \treturn fetchReddit(`/r/${subreddit}/comments/${id}/.json?sort=${sortParams}&limit=100`);\r\n}\r\n\r\nexport function fetchUserData(token) {\r\n  \treturn Promise.all([\r\n  \t\t// fetch users reddit profile\r\n\t\tfetchWithToken(\"/api/v1/me\", token),\r\n  \t\t// fetch list of users subscribed subreddits\r\n\t\tfetchWithToken(\"/subreddits/mine/subscriber\", token)\r\n\t]);\r\n}\r\n\r\n// vote\r\nexport function castVote(id, dir) {\r\n\t// dir === 1 || -1 and indicates upvote || downvote\r\n\treturn postWithToken(`/api/vote?id=${id}&dir=${dir}`)\r\n}\r\n\r\n\r\n// ========== general purpose ============\r\n\r\nexport async function fetchReddit(path) {\r\n  \tconst res = await fetch(`https://www.reddit.com${path}`);\r\n  \tconsole.log(res.status);\r\n  \treturn res.json();\r\n}\r\n\r\nexport async function fetchWithToken(path, token) {\r\n\ttoken = token || accesstoken.get();\r\n\r\n\tif (!tokenIsValid(token)) {\r\n\t\taccesstoken.remove();\r\n\t\treturn Promise.reject(\"Token is expired.\");\r\n\t}\r\n\r\n\tconst options = {\r\n\t  headers: {\r\n\t    Authorization: `bearer ${token.value}`\r\n\t  }\r\n\t}\r\n\r\n\tconst res = await fetch(`https://oauth.reddit.com${path}`, options);\r\n  \tconsole.log(res.status);\r\n\treturn res.json();\r\n}\r\n\r\nexport async function postWithToken(path) {\r\n// only function that returns res instead of res.json(),\r\n// because it is used exclusively by castVote(), which returns a parsed object\r\n\tconst token = accesstoken.get();\r\n\r\n\tif (!tokenIsValid(token)) {\r\n\t\taccesstoken.remove();\r\n\t\treturn Promise.reject(\"Token is expired.\");\r\n\t}\r\n\r\n\tconst options = {\r\n\t\tmethod: \"POST\",\r\n\t  \theaders: {\r\n\t    \tAuthorization: `bearer ${token.value}`\r\n\t  \t}\r\n\t}\r\n\r\n\tconst res = await fetch(`https://oauth.reddit.com${path}`, options);\r\n\tconsole.log(res.status);\r\n\treturn res;\r\n}\r\n\r\n\r\n// =========== more button functionality ============\r\n\r\nexport async function fetchMoreAndInsert(link_id, children, listing, parentId) {\r\n  \t\r\n  \t// fetch more replies\r\n  \tconst res = await fetchReddit(`/api/morechildren.json?link_id=t3_${link_id}&children=${children.join(\", \")}&api_type=json`)\r\n\r\n  \t// traverse listing to find matching id and append replies ( is currently mutating :S )\r\n  \treturn findInListingAndInsert(listing, parentId.substring(3), res.json.data.things);\r\n}\r\n\r\n// takes listing and additional replies and merges them\r\nfunction findInListingAndInsert(listing, parentId, ArraytoInsert) {\r\n\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t// the comments object is a \"listing\" and NOT the actual array\r\n\t\tconst comments = listing[1].data.children;\r\n\r\n\t\t// loop through comments\r\n\t\tcomments.forEach((comment, i) => {\r\n\t\t\tif (comment.data.id === parentId && comment.kind !== \"more\") {\r\n\t\t\t\t\r\n\t\t\t\t// remove more object\r\n\t\t\t\tcomment.data.replies.data.children.pop();\r\n\t\t\t\t// if comment is parent, insert replies and resolve with new listing\r\n  \t\t\t\tArraytoInsert.map(toInsert => comment.data.replies.data.children.push(toInsert));\r\n\t\t\t\tresolve(listing);\r\n\t\t\t}\r\n\r\n\t\t\t// comment is not parent, but has replies\r\n\t\t\tif (comment.data.replies) {\r\n\r\n\t\t\t\t// look if a reply is the parent \r\n\t\t\t\tfindIdInRepliesAndInsert(comment.data.replies, parentId, ArraytoInsert)\r\n\t\t\t\t.then(listing => listing && resolve(listing))\r\n\t\t\t\t.catch(err => console.error(err))\r\n\t\t\t}\r\n\t\t\t// reject() oder resolve(\"someKindOfErrorMessage\")\r\n\t\t})\r\n\r\n\t})\r\n\r\n\t// recursive function\r\n\tfunction findIdInRepliesAndInsert(replies, parentId, ArraytoInsert) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\t// the replies object is a \"listing\" and NOT the actual array\r\n\t\t\tconst children = replies.data.children;\r\n\r\n\t\t\t// loop over children\r\n\t\t\tchildren.forEach((child, i) => {\r\n\t\t\t\t\r\n\t\t\t\t// check if actual replies and not just links to fetch more replies\r\n\t\t\t\tif (child.data.id === parentId && child.kind !== \"more\") {\r\n\r\n\t\t\t\t\t// remove more object\r\n\t\t\t\t\tchild.data.replies.data.children.pop();\r\n\t\t\t\t\t// .then insert replies\r\n\t  \t\t\t\tArraytoInsert.map(toInsert => child.data.replies.data.children.push(toInsert));\r\n\t\t\t\t\t\r\n\t\t\t\t\tresolve(listing);\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t// reply is not parent, but has replies\r\n\t\t\t\t// call self with the replies of the reply\r\n\t\t\t\tif (child.data.replies) {\r\n\r\n\t\t\t\t\t// look if a reply of reply is the parent \r\n\t\t\t\t\tfindIdInRepliesAndInsert(child.data.replies, parentId, ArraytoInsert)\r\n\t\t\t\t\t.then(listing => resolve(listing)) \r\n\t\t\t\t\t.catch(err => console.err(err))\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t});\r\n\t}\r\n}","const getHashValue = key => {\r\n\t// if (!key)\r\n  \tconst matches = window.location.hash.match(new RegExp(key+'=([^&]*)'));\r\n  \treturn matches ? matches[1] : null;\r\n}\r\n\r\nexport default getHashValue;","import { fetchUserData } from \"./user.service.js\";\r\nimport getHashValue from \"../helpers/getHashValue\";\r\nimport accesstoken from \"../helpers/accesstoken\";\r\nimport tokenIsValid from \"../helpers/tokenIsValid\";\r\nimport history from \"../helpers/history\";\r\n\r\nexport default {\r\n  tryLogin,\r\n  logout\r\n}\r\n\r\nexport function tryLogin() {\r\n  const token = accesstoken.get();\r\n  \r\n  // check and parse url | values: access_token, token_type, state, expires_in, scope\r\n  const state = getHashValue(\"state\");\r\n  const newToken = {\r\n    value: getHashValue(\"access_token\"),\r\n    expires_in: Date.now() / 1000 + Number(getHashValue(\"expires_in\"))\r\n  }\r\n  \r\n  // validate request and origin\r\n  if (newToken && state === process.env.REACT_APP_SECRET_STRING) {\r\n    console.log(\"setting new token\");\r\n    accesstoken.set(newToken);\r\n    return fetchUserData(newToken);\r\n  }\r\n\r\n  // if no params in url check localStorage\r\n  else if (token && tokenIsValid(token)) {\r\n    return fetchUserData(token);\r\n\r\n  } else {\r\n    accesstoken.remove();\r\n    return Promise.reject(\"not logged in\");\r\n  }\r\n}\r\n\r\nexport function logout() {  \r\n\tconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n  accesstoken.remove();\r\n\thistory.push(`${uri}/`);\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/ToFrontpageBtn.css\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nconst ToFrontpageBtn = () => {\r\n  return (\r\n    <div className=\"to-frontpage-container\">\r\n      <Link to={`${uri}/frontpage`}>\r\n        <button className=\"to-frontpage-btn\">To the frontpage</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToFrontpageBtn;","import React from 'react';\r\nimport './css/About.css';\r\n\r\nimport ToFrontpageBtn from \"../components/ToFrontpageBtn\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"About\">\r\n      <Banner />\r\n      <Sections />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <header className=\"about-banner\">\r\n        <div className=\"banner-text\">\r\n          <h1>For Reddit,To Go</h1>\r\n        </div>\r\n        <img alt=\"\" src={ `${process.env.PUBLIC_URL}/images/walker.png` } />\r\n    </header>\r\n  );\r\n}\r\nconst Sections = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"about-section\">\r\n        <h1>Listen to Reddit, while getting stuff done.</h1>\r\n        <p>Reddit To Go is a web application intended for portable devices that leverages the <b>Text to Speech</b> features of modern browsers to read out reddit threads. For now please consider using the latest version of <b>Google Chrome</b> or <b>Mozilla Firefox</b> to ensure functionality and the best possible user experience.</p>\r\n        <ToFrontpageBtn />\r\n        <p>RedditToGo fits some subreddits more than others. Where it excels are textbased threads and comment trees. Accessing threads that share images, videos or links is possible, but for now you will have to follow the link to the original source to consume it.</p>\r\n        <p>Features like messaging, mod features, etc are not included for now, because this is meant to be a complementary service one can use if needed.</p>\r\n        <p>If you want to suggest or contribute a feature, feel free to contact me on my page or on github.</p> \r\n      </section>\r\n  \r\n      <section className=\"about-section\">\r\n        <h1>How to use / main features</h1>\r\n        <p>When reading a thread a user may use the synthesizer buttons to control the speech synthesis. Pressing <b>PLAY</b> will read the thread from beginning to end. You may skip or relisten to individual posts by using the <b>BACK</b> / <b>SKIP</b> buttons respectively. <b>STOP</b> will halt and cancel all queued messages.</p>\r\n        <p>You may also select a <b>READMODE</b>. For now there is <b>STANDARD</b> and <b>TOP CMNTS</b>. <b>STANDARD</b> will read the thread as is with all comments including some (or all, depending on the volume) high rated replies, while <b>TOP CMNTS</b> only reads out comments without reading out any replies.</p>\r\n        <p>Comments get initialized with the phrase: <i>USERNAME comments...</i> while replies get initialized with <i>USERNAME replies...</i></p>\r\n      </section>\r\n  \r\n      <section className=\"about-section\">\r\n        <h1>Contact</h1>\r\n        <p>If you find any bugs or have suggestions please feel free to contact me on my page or on github. I built this project for myself initially, but figured some people might find it useful. I would be stoked to improve <b>For Reddit, To Go</b> for others aswell.</p>\r\n        \r\n        <div className=\"socialmedia-icons\">\r\n          <a href=\"https://raphaelmayer.github.io/go\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fas fa-envelope\"></i></a>\r\n          <a href=\"https://github.com/raphaelmayer/ForRedditToGo\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}","const convertToHoursAgo = then => {\r\n  // then has to be a UNIX string\r\n  const now = Date.now();\r\n\r\n  // time since \"then\" in seconds\r\n  let converted = Math.round((now - then) / 1000);\r\n\r\n  // determine which unit is appropriate\r\n  if (converted < 10) {\r\n    converted = \"Just now\";\r\n  } else if (converted < 60) {\r\n    converted = Math.round(converted) + \" seconds ago\";\r\n  } else if (converted < 60*60) {\r\n    converted = Math.round(converted / 60) + \" minutes ago\";\r\n  } else if (converted < 60*60*24) {\r\n    converted = Math.round(converted / (60*60)) + \" hours ago\";\r\n  } else if (converted < 60*60*24*30) {\r\n    converted = Math.round(converted / (60*60*24)) + \" days ago\";\r\n  } else if (converted < 60*60*24*365) {\r\n    converted = Math.round(converted / (60*60*24*30)) + \" months ago\";\r\n  } else if (converted >= 60*60*24*365) {\r\n    converted = Math.round(converted / (60*60*24*365)) + \" years ago\";\r\n  }\r\n\r\n  // if singular remove \"s\" from units\r\n  if (converted[0] < 2) {\r\n    const i = converted.indexOf(\"s\");\r\n    converted = converted.slice(0, i) + \" ago\";\r\n  }\r\n  return converted;\r\n}\r\n\r\nexport default convertToHoursAgo;","import React from \"react\";\r\nimport convertToHoursAgo from \"../helpers/convertToHoursAgo\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nconst AuthorHeader = props => {\r\n\tconst { r, author, date } = props;\r\n\tconst hoursAgoStr = convertToHoursAgo(date*1000);\r\n\treturn (\r\n\t\t<small className=\"AuthorHeader\">\r\n\t\t\t<span  className=\"subreddit\"><Link to={ `${uri}/${r}` }>{ r }</Link></span>\r\n\t\t\t<span  className=\"author\"> &#8226; Posted by u/{ author }</span>\r\n\t\t\t<span  className=\"time\"> &#8226; { hoursAgoStr }</span>\r\n\t\t</small>\r\n\t);\r\n}\r\n\r\nexport default AuthorHeader;","function spaceOutNumber(nbr) {\r\n\tif (!nbr || nbr < 1000) return nbr;\r\n\r\n\t// convert to array\r\n\tnbr = nbr.toString().split(\"\");\r\n\r\n\t// add space after 3 digits\r\n\tconst spacedOut = nbr.map((digit, i) => {\r\n\t\tif (i === 0) return digit;\r\n\r\n\t\t// subtract i from length bc it starts at 0 and goes up\r\n\t\tif ((nbr.length - i) % 3 === 0) return ` ${digit}`;\r\n\t\treturn digit;\r\n\t})\r\n\r\n\treturn spacedOut.join(\"\");\r\n}\r\n\r\nexport default spaceOutNumber;","import React from \"react\";\r\nimport \"./css/ThreadStatsBox.css\";\r\n\r\nimport spaceOutNumber from \"../helpers/spaceOutNumber\";\r\n\r\nfunction no() {\r\n\tconsole.log(\"no.\");\r\n\talert(\"no.\");\r\n}\r\n\r\nconst ThreadStatsBox = ({ data, handleVote, type }) => {\r\n\t// type: determine, if children are comments or replies; defaults to \"Comments\"\r\n\treturn (\r\n\t\t<div className=\"ThreadStatsBox\">\r\n\t\t\t<div>\r\n\t\t\t\t<small>\r\n\t\t\t\t\t<span>{ `${spaceOutNumber(data.num_comments) || 0} ${type || \"Comments\"}` }</span>\r\n\t\t\t\t</small>\r\n\t\t\t\t<small className=\"score-mobile\">\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<i className=\"fas fa-arrow-up\" name={ data.name } onClick={ handleVote || no }></i>\r\n\t\t\t\t\t\t{ ` ${spaceOutNumber(data.score)} Upvotes ` }\r\n\t\t\t\t\t\t<i className=\"fas fa-arrow-down\" name={ data.name } onClick={ handleVote || no }></i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>\r\n\t\t\t<MediaLink url={ data.url } />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ThreadStatsBox;\r\n\r\nconst MediaLink = ({ url }) => {\r\n\tif (url && url.slice(0, 23) !== \"https://www.reddit.com/\") {\r\n\t\treturn (\r\n\t\t\t<div className=\"media-link\">\r\n\t\t\t\t<a href={ url } target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<i className=\"fas fa-link\"></i> \r\n\t\t\t\t\t<span>{ url.split(\"/\")[2] }</span>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\t\t\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n","import print from \"../helpers/print\";\r\n\r\nlet synth;\r\nlet voice;\r\n\r\n// load voices, and try again if it fails\r\nlet tries = 0;\r\n\r\nif ('speechSynthesis' in window) {\r\n  synth = window.speechSynthesis;\r\n  loadVoices();\r\n}\r\n\r\nfunction loadVoices() {\r\n\ttries++;\r\n\tconst voices = synth.getVoices();\r\n\tif (voices.length) {\r\n\t\tvoice = voices.find(v => /en[-_]US/.test(v.lang));\t// regex because android\r\n\t}\r\n\tif (!voice) {\r\n\t\tif (tries < 10) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tloadVoices();\r\n\t\t\t}, 250);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"en-US voice not found.\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// takes string and starts reading out lout\r\n// done takes (err, event)\r\nexport function readOut(message, done) {\r\n    const speech = new SpeechSynthesisUtterance(message);\r\n\r\n    // find voices\r\n\tloadVoices();\r\n\r\n\t// Set text and voice attributes\r\n\tspeech.lang = \"en-US\";\r\n\tspeech.volume = 1;\r\n\tspeech.rate = 1;\r\n\tspeech.pitch = 1;\r\n\tspeech.voice = voice;\r\n\r\n\t// Custom Error Handler\r\n\tspeech.addEventListener(\"error\", error => console.error(error));\r\n\r\n\t// Register Event Handlers\r\n\tspeech.onstart = (e) => {\r\n\t\tprint(`array char count: ${message.length} (32,767 max)`);\r\n\t\tprint(\"SPEECH started.\");\r\n\t}\r\n\tspeech.onend = (e) => {\r\n\t\tprint(\"SPEECH ended.\");\r\n\t\tdone && done(null, e);\r\n\t}\r\n\tspeech.onpause = () => {\r\n\t\tprint(\"SPEECH paused.\");\r\n\t}\r\n\tspeech.onresume = () => {\r\n\t\tprint(\"SPEECH resumed.\");\r\n\t}\r\n\tspeech.onerror = (e) => {\r\n\t\tprint(`SPEECH ERROR!`);\r\n\t\tdone && done(\"ERROR reading out.\", e);\r\n\t}\r\n\t\r\n\t// start playback\r\n\tsynth.speak(speech);\r\n}\r\n\r\n// makes array of strings to pass to speechSynthesis;\r\nexport function convertListingToScript(listing, readmode) {\r\n\tlet script = [];\r\n\r\n\tconst title =  listing[0].data.children[0].data.title;\r\n\tconst post = listing[0].data.children[0].data.selftext;\r\n\tconst comments = listing[1].data.children;\r\n\r\n\t// push title, post and comments to array in order and read out\r\n\ttitle && script.push(cleanString(title));\r\n\tpost && script.push(cleanString(post));\r\n\r\n\t// push comments and replies to array\r\n\tcomments.forEach((c, i) => {\r\n\t\tscript.push(` ${c.data.author} comments: ? ` + cleanString(c.data.body));\r\n\t\t\r\n\t\tif (readmode === \"STANDARD\") {\r\n\t\t\tpushReplies(c.data.replies, script);\r\n\t\t}\r\n\t});\r\n\treturn script;\r\n}\r\n\r\n// recursively add replies to script array\r\nfunction pushReplies(replies, script) {\r\n\r\n\tif (replies && replies.kind !== \"more\") {\r\n\r\n\t\t// the replies object is a \"listing\" and NOT the actual array\r\n\t\tconst children = replies.data.children;\r\n\r\n\t\t// loop over children\r\n\t\tchildren.forEach((child, i) => {\r\n\r\n\t\t\t// check if actual replies and not just links to fetch more replies\r\n\t\t\tif (child.kind !== \"more\") {\r\n\r\n\t\t\t\t// if it is push reply body to array\r\n\t\t\t\tscript.push(` ${child.data.author} replies: ? ` + cleanString(child.data.body));\r\n\r\n\t\t\t\t// call self with the replies of the reply\r\n\t\t\t\tpushReplies(child.data.replies, script);\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\t\r\n}\r\n\r\n// remove special symbols from strings by defining what NOT to remove\r\nfunction cleanString(str) {\r\n\tif (!str) {\r\n\t\treturn null;\r\n\t}\r\n\treturn str.replace(/[^\\w\\s.:,_$@%;-=`´'/!?]/gi, '');\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Parser from \"html-react-parser\";\r\nimport \"./css/ThreadBox.css\";\r\n\r\nimport AuthorHeader from \"../components/AuthorHeader\";\r\nimport ThreadStatsBox from \"../components/ThreadStatsBox\";\r\n// import decodeHtml from \"../helpers/decodeHtml\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nconst ThreadBox = ({ data, handleVote }) => {\r\n\treturn (\r\n\t\t<div className=\"ThreadBox\" >\r\n\r\n\t\t\t<small className=\"score\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div><i className=\"fas fa-arrow-up\" name={ data.name } onClick={ handleVote }></i></div>\r\n\t\t\t\t\t<div>{ data.score }</div>\r\n\t\t\t\t\t<div><i className=\"fas fa-arrow-down\" name={ data.name } onClick={ handleVote }></i></div>\r\n\t\t\t\t</div>\r\n\t\t\t</small>\r\n\t\t\t\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<AuthorHeader r={ data.subreddit_name_prefixed } author={ data.author } date={ data.created_utc } />\r\n\r\n\t\t\t\t<Link to={ `${uri}/r/${data.subreddit}/${data.id}` } >\r\n\t\t\t\t\t{ data && <h3>{ data.title }</h3> }\r\n\t\t\t\t\t{ data.selftext && <p className=\"selftext\">{ data.selftext }</p> }\t\t\t\t\r\n\t\r\n\t\t\t\t\t{/* data.media && data.media.reddit_video && <div className=\"media-wrapper\"><iframe className=\"media\" src={ data.media.reddit_video.scrubber_media_url } ></iframe></div> */}\r\n\t\t\t\t\t{/* data.preview && data.preview.reddit_video_preview && <iframe src={ data.preview.reddit_video_preview.scrubber_media_url } ></iframe> */}\r\n\t\t\t\t\t{/* data.media && \"media\" */}\r\n\t\t\t\t\t{/* data.media_embed.content && Parser(decodeHtml(data.media_embed.content)) */}\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<ThreadStatsBox \r\n\t\t\t\t\tdata={{ num_comments: data.num_comments,\r\n\t\t\t\t\t\t\tscore: data.score,\r\n\t\t\t\t\t\t\tname: data.name,\r\n\t\t\t\t\t\t\turl: data.url\r\n\t\t\t\t\t}}\r\n\t\t\t\t\thandleVote={ handleVote }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ThreadBox;","import React from \"react\";\r\n\r\nconst ErrorBox = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tThere seems to be an error. Please try again and check your URL.\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ErrorBox;","import React from \"react\";\r\nimport \"./css/LoadingScreen.css\";\r\n\r\nconst LoadingScreen = () => {\r\n\treturn (\r\n\t\t<div className=\"LoadingScreen\">\r\n\t\t<div>\r\n\t\t\t<div className=\"spinner\"></div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LoadingScreen;","import React from \"react\";\r\nimport \"./css/SortBox.css\";\r\n\r\n// active.value === sort value like hot, top, controversial\r\n// active.top === sort value for top like week, month, all\r\n\r\nconst SortBox = ({ onChange, values, active }) => {\r\n\treturn (\r\n\t\t<form className=\"SortBox\" onChange={ onChange }>\r\n\t\t\t<span>Sort by</span>\r\n\t\t\t<select defaultValue={ active.value || active }>\r\n\t\t\t\t{ values && values.map((v, i) => <option value={ v.toLowerCase() } key={i} >{ v }</option>) }\r\n\t\t\t</select>\r\n\r\n\t\t\t{ active.top &&\r\n\t\t\t<select defaultValue={ active.top } className={ active.value === \"top\" ? \"SortBox-top SortBox-top-active\" : \"SortBox-top\" }>\r\n\t\t\t\t{ topValues.map((v, i) => <option value={ v.toLowerCase() } key={i} >{ v }</option>) }\r\n\t\t\t</select>\r\n\t\t\t}\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default SortBox;\r\n\r\nconst topValues = [\"Hour\", \"Day\", \"Week\", \"Month\", \"Year\", \"All\"];","import React, { Component } from 'react';\r\nimport './css/Sub.css';\r\n\r\nimport { fetchSubreddit, castVote } from \"../services/user.service.js\";\r\n\r\nimport ThreadBox from \"../components/ThreadBox\";\r\nimport ErrorBox from \"../components/ErrorBox\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport SortBox from \"../components/SortBox\";\r\n\r\nclass Sub extends Component {\r\n  constructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { listing: null, currentSub: null, loading: true, sort: { value: \"hot\", top: \"hour\" } };\r\n    this.handleSort = this.handleSort.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  \tconst subreddit = this.props.location.pathname.split(\"/\")[3];\r\n  \t\r\n  \tfetchSubreddit(subreddit)\r\n  \t.then(data => this.setState({ listing: data, currentSub: subreddit, loading: false }))\r\n  \t.catch(err => this.setState({ listing: null, currentSub: subreddit, loading: false }))\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n  \tconst subreddit = this.props.location.pathname.split(\"/\")[3];\r\n    const { loading, currentSub, sort } = this.state;\r\n  \t\r\n    if (!loading && currentSub !== subreddit) {\r\n      this.setState({ loading: true });\r\n\r\n      fetchSubreddit(subreddit, sort)\r\n  \t\t.then(data => this.setState({ listing: data, currentSub: subreddit, loading: false }))\r\n  \t\t.catch(err => this.setState({ listing: null, currentSub: subreddit, loading: false }))\r\n  \t}\r\n  }\r\n  \r\n  handleSort(e) {\r\n    const sort = { value: e.target.form[0].value, top: e.target.form[1].value };\r\n    const subreddit = this.props.location.pathname.split(\"/\")[3];\r\n    \r\n    this.setState({ loading: true, sort });\r\n\r\n    fetchSubreddit(subreddit, sort)\r\n    .then(data => this.setState({ listing: data, currentSub: subreddit, loading: false }))\r\n    .catch(err => this.setState({ listing: null, currentSub: subreddit, loading: false }))\r\n  }\r\n\r\n  handleVote(e) {\r\n    const name = e.target.attributes.name.value;\r\n    const dir = e.target.className === \"fas fa-arrow-up\" ? \"1\" : \"-1\";\r\n    e.target.className += \" orange\";\r\n\r\n    castVote(name, dir)\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(err => console.error(err)) \r\n  }\r\n  \r\n  render() {\r\n\tconst { listing, loading, sort } = this.state;\r\n    \r\n\t\tif (loading) {\r\n      return ( <LoadingScreen /> );\r\n\r\n    } else if (listing && listing.data) {\r\n      const children = listing.data.children;\r\n\r\n      return (\r\n        <div className=\"Sub\">\r\n\r\n          <div className=\"container\">\r\n\r\n            <header className=\"SubTitle\">\r\n              <h2>r/{ children[0] && children[0].data.subreddit }</h2>\r\n            </header>\r\n\r\n            <SortBox onChange={ this.handleSort } active={ sort } values={[ \"Hot\", \"New\", \"Controversial\", \"Top\" ]} />\r\n            { children.map((c, i) => <ThreadBox { ...c } handleVote={ this.handleVote } key={i} /> )}\r\n          \r\n          </div>\r\n        </div>\r\n      );\r\n    \r\n    } else {\r\n      return ( <ErrorBox /> );\r\n\t  }\r\n\t}\r\n}\r\n\r\nexport default Sub;\r\n\r\n","// print to Log\r\nconst print = toPrint => {\r\n\tconst log = document.getElementById(\"log\");\r\n\tlog && log.insertAdjacentHTML(\"beforeend\", `<small><b>${toPrint}</b></small>`);\r\n}\r\n\r\nexport default print;\r\n    ","import React, { Component } from \"react\";\r\nimport \"./css/Synth.css\";\r\n\r\nimport { readOut, convertListingToScript } from \"../services/speech.service.js\";\r\nimport print from \"../helpers/print\";\r\n\r\nclass Synth extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\tlogIsOpen: false, \r\n\t\t\tlisting: null,\r\n\t\t\treadmode: \"STANDARD\", // STANDARD, TOP_COMMENTS, COMMENT_TREE\r\n\t\t\tscript: null,\r\n\t\t\tposition: 0,\r\n\t\t\tisOn: false\r\n\t\t};\r\n\t\tthis.handleLog = this.handleLog.bind(this);\r\n\t\tthis.handleReadMode = this.handleReadMode.bind(this);\r\n\t\tthis.play = this.play.bind(this);\r\n\t\tthis.back = this.back.bind(this);\r\n\t\tthis.skip = this.skip.bind(this);\r\n\t\tthis.stop = this.stop.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tconst { listing } = this.props;\r\n\t\tlisting && this.setState({ listing });\r\n\t}\r\n\r\n\t// button handlers\r\n\tplay(e) {\r\n\t\tconst { listing, position, readmode } = this.state;\r\n\t\t\r\n\t\t// START\r\n\t\tif (!window.speechSynthesis.speaking) {\r\n\t\t\tprint(\"START EVENT\");\r\n\r\n\t\t\t// convert listing to an array of strings\r\n\t\t\t// where each item represents one title, post, comment or reply\r\n\t\t\tconst script = convertListingToScript(listing, readmode);\r\n\r\n\t\t\t// push all items onto the utterance queue with a callback\r\n\t\t\tmapScriptToUtteranceQueue(position, script, (err, e) => {\r\n\t\t\t\tthis.setState({ position: this.state.position + 1 });\r\n\t\t\t});\r\n\r\n\t\t\t// set state to track position for back and skip functionality\r\n\t\t\tthis.setState({ isOn: true, script, position });\r\n\r\n\t\t// PAUSE\r\n\t\t} else {\r\n\t\t\tprint(\"TOGGLE PAUSE EVENT\");\r\n\t\t\twindow.speechSynthesis.cancel();\r\n\r\n\t\t\t// cancel() increments position once, see readOut callback\r\n\t\t\tthis.setState({ isOn: false, position: position - 1 });  \r\n\t\t}\r\n\t}\r\n\tback(e) {\r\n\t\tprint(\"BACK EVENT\");\r\n\t\tconst { script, position } = this.state;\r\n\t\tconst previous = position < 2 ? 0 : position - 1;\r\n\r\n\t\tmapScriptToUtteranceQueue(previous, script, (err, e) => {\r\n\t\t\tthis.setState({ position: this.state.position + 1 });\r\n\t\t});\r\n\t\t\r\n\t\t// cancel() increments position once, see readOut callback \t\r\n\t\tif (window.speechSynthesis.speaking) {\r\n\t\t\tthis.setState({ position: previous - 1, isOn: true });  \r\n\t\t} else {\r\n\t\t\tthis.setState({ position: previous, isOn: true });  \r\n\t\t}\r\n\t}\r\n\tskip(e) {\r\n\t\tprint(\"SKIP EVENT\");\r\n\t\tconst { script, position } = this.state;\r\n\t\tconst next = position + 1;\r\n\r\n\t\tmapScriptToUtteranceQueue(next, script, (err, e) => {\r\n\t\t\tthis.setState({ position: this.state.position + 1 });\r\n\t\t});\r\n\r\n\t\t// cancel() increments position once, see readOut callback\r\n\t\tif (window.speechSynthesis.speaking) {\r\n\t\t\tthis.setState({ position: next - 1, isOn: true });\r\n\t\t} else {\r\n\t\t\tthis.setState({ position: next, isOn: true });\r\n\t\t}\r\n\t}\r\n\tstop(e) {\r\n\t\tprint(\"STOP EVENT\");\r\n\t\tconst { isOn } = this.state;\r\n\t\twindow.speechSynthesis.cancel();\r\n\r\n\t\t// cancel() increments position once, see readOut callback\r\n\t\t// isOn to prevent multiple clicks\r\n\t\tisOn && this.setState({ isOn: false, position: -1, script: null }); \r\n\t}\r\n\r\n\thandleLog(e) {\r\n\t\tthis.setState({ logIsOpen: !this.state.logIsOpen });\r\n\t}\r\n\r\n\thandleReadMode(e) {\r\n\t\tthis.setState({ readmode: e.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { logIsOpen, isOn, readmode, position, script } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Synth\">\r\n\r\n\t\t\t\t<i onClick={ this.handleLog } className=\"fas fa-bars\"></i>\r\n\t\t\t\t<div id=\"log\" className={ logIsOpen ? \"\" : \"hidden\" }><p><u>DebugLog</u></p></div>\r\n\t\t\t\t<div className=\"synth-name\">Synthesizer 2000</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"readmode\">Mode: \r\n\t\t\t\t\t<select onChange={ this.handleReadMode } value={ readmode } >\r\n\t\t\t\t\t\t<option value=\"STANDARD\">Standard</option>\r\n\t\t\t\t\t\t<option value=\"TOP_COMMENTS\">Top cmnts</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<span className=\"position\">{ `${position} / ${script ? script.length : \" - \" }` }</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"synth-btn-container\">\t\r\n\t\t\t\t\t<SynthBtn icon={ isOn ? \"fas fa-pause\" : \"fas fa-play\" } onClick={ this.play } />\r\n\t\r\n\t\t\t\t\t<SynthBtn icon=\"fas fa-backward\" onClick={ this.back } />\r\n\r\n\t\t\t\t\t<SynthBtn icon=\"fas fa-forward\" onClick={ this.skip } />\r\n\t\r\n\t\t\t\t\t<SynthBtn icon=\"fas fa-stop\" onClick={ this.stop } />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Synth;\r\n\r\nconst SynthBtn = ({ icon, onClick }) => {\r\n\treturn (\r\n\t\t<div  className=\"synth-btn\" onClick={ onClick } >\r\n\t\t\t<i className={ icon } id=\"playbtn\"></i>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction mapScriptToUtteranceQueue(position, script, done) {\r\n\twindow.speechSynthesis.cancel();\r\n\r\n\t// slice complete script at new position and map to readOut\r\n\tscript.slice(position, script.length).forEach(text => {\r\n\t\ttext && readOut(text, (err, e) => {\r\n\t\t\t\r\n\t\t\tif (err) console.error(err);\r\n\r\n\t\t\tdone(null, e);\r\n\t\t});\r\n\t});\r\n}","import React from \"react\";\r\n\r\nconst MoreButton = ({ onClick, text, data }) => {\r\n\t// data && to prevent crash when using the search feature\r\n\tconst children = data && data.children;\r\n\tconst parentId = data && data.parent_id;\r\n\r\n\treturn (\r\n\t\t<button onClick={ e => onClick(e, children, parentId) } className=\"MoreButton\">{ `${text}` }</button>\r\n\t);\r\n}\r\n\r\nexport default MoreButton;","const decodeHtml = (html) => {\r\n    var txt = document.createElement(\"textarea\");\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n}\r\n\r\nexport default decodeHtml;\r\n  ","import React, { Component } from 'react';\r\nimport Parser from \"html-react-parser\";\r\nimport './css/Thread.css';\r\n\r\nimport Synth from \"../containers/Synth\";\r\nimport ErrorBox from \"../components/ErrorBox\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport AuthorHeader from \"../components/AuthorHeader\";\r\nimport SortBox from \"../components/SortBox\";\r\nimport MoreButton from \"../components/MoreButton\";\r\nimport ThreadStatsBox from \"../components/ThreadStatsBox\";\r\n\r\nimport { fetchRedditThread, fetchMoreAndInsert, castVote } from \"../services/user.service.js\";\r\nimport convertToHoursAgo from \"../helpers/convertToHoursAgo\";\r\nimport decodeHtml from \"../helpers/decodeHtml\";\r\n\r\nclass Thread extends Component {\r\n  \tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { listing: null, loading: true, toRead: null, sort: \"Best\" }\r\n\t\tthis.handleSort = this.handleSort.bind(this);\r\n\t\tthis.handleMore = this.handleMore.bind(this);\r\n  \t}\r\n  \t\r\n  \tcomponentDidMount() {\r\n  \t\tconst subreddit = this.props.location.pathname.split(\"/\")[3];\r\n  \t\tconst threadId = this.props.location.pathname.split(\"/\")[4];\r\n  \t\t\r\n  \t\tfetchRedditThread(subreddit, threadId)\r\n  \t\t.then(data => this.setState({ listing: data, loading: false }))\r\n  \t\t.catch(err => this.setState({ listing: null, loading: false }));\r\n  \t}\r\n\r\n  \thandleSort(e) {\r\n    \tthis.setState({ loading: true, sort: e.target.value });\r\n    \t\r\n  \t\tconst subreddit = this.props.location.pathname.split(\"/\")[3];\r\n  \t\tconst threadId = this.props.location.pathname.split(\"/\")[4];\r\n  \t\t\r\n  \t\tfetchRedditThread(subreddit, threadId, e.target.value)\r\n  \t\t.then(data => this.setState({ listing: data, loading: false }))\r\n  \t\t.catch(err => this.setState({ listing: null, loading: false }))\r\n  \t}\r\n\r\n  \thandleVote(e) {\r\n  \t\tconst name = e.target.attributes.name.value;\r\n  \t\tconst dir = e.target.className === \"fas fa-arrow-up\" ? \"1\" : \"-1\";\r\n  \t\te.target.className += \" orange\";\r\n\r\n    \tcastVote(name, dir)\r\n  \t\t.then(data => {\r\n  \t\t\tconsole.log(data);\r\n  \t\t})\r\n  \t\t.catch(err => console.error(err))\t\r\n  \t}\r\n\r\n  \thandleMore(e, children, parentId) {\r\n  \t\tconst { listing } = this.state;\r\n  \t\tconst link_id = listing[0].data.children[0].data.id;\r\n\r\n  \t\t// fetch more replies\r\n  \t\tfetchMoreAndInsert(link_id, children, listing, parentId)\r\n  \t\t.then(newListing => this.setState({ listing: newListing }))\r\n  \t\t.catch(err => console.error(err))\r\n  \t}\r\n\r\n  \trender() {\r\n\t\tconst { listing, loading, sort } = this.state;\r\n\t\tconsole.log(\"listing\", listing);\r\n\t\tconsole.log(\"should log\");\r\n\t\tif (loading) {\r\n\t\t\treturn ( <LoadingScreen /> );\r\n\r\n\t  \t} else if (listing) {\r\n\t\t\tconst threadInfo = listing[0].data.children[0];\r\n\t\t\tconst comments = listing[1].data.children;\r\n\r\n\t\t\treturn (\r\n\t\t\t  \t<div className=\"Thread\">\r\n\t\t\t  \t\t<Synth listing={ listing } />\r\n\t\t\t  \t\t<div className=\"container\">\r\n\t\t\t  \t\t\t<ThreadHead { ...threadInfo } handleVote={ this.handleVote } />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<SortBox onChange={ this.handleSort } active={ sort } values={[ \"Best\", \"Top\", \"New\", \"Controversial\",  \"Old\" ]} />\r\n\t\t\t\t\t\t\t{ comments && comments.map((c, i) => <CommentBox key={i} { ...c } handleVote={ this.handleVote } handleMore={ this.handleMore } />) }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t  \t</div>\r\n\t\t\t);\r\n\t\t\r\n\t\t} else {\r\n\t  \t\treturn ( <ErrorBox /> );\r\n\t  \t}\r\n  \t}\r\n}\r\n\r\nexport default Thread;\r\n\r\nconst ThreadHead = ({ data, handleVote }) => {\r\n\treturn (\r\n\t\t<article className=\"ThreadHead\">\r\n\t\t\t<AuthorHeader r={ data.subreddit_name_prefixed } author={ data.author } date={ data.created_utc } />\r\n\r\n\t\t\t<header>\r\n\t\t\t\t<h2>{ data.title }</h2>\r\n\t\t\t</header>\r\n\r\n\t\t\t{/* data.media && data.media.reddit_video && <iframe src={ data.media.reddit_video.scrubber_media_url } width={ data.media.reddit_video.width } ></iframe> */}\r\n\t\t\t{/* data.preview && data.preview.reddit_video_preview && <iframe src={ data.preview.reddit_video_preview.scrubber_media_url } ></iframe> */}\r\n\t\t\t{/* data.media_embed.content && Parser(decodeHtml(data.media_embed.content)) */}\r\n\t\t\t{ data.selftext_html && <div>{ Parser(decodeHtml(data.selftext_html)) }</div> }\r\n\r\n\t\t\t<ThreadStatsBox \r\n\t\t\t\tdata={{ num_comments: data.num_comments,\r\n\t\t\t\t\t\tscore: data.score,\r\n\t\t\t\t\t\tname: data.name,\r\n\t\t\t\t\t\turl: data.url\r\n\t\t\t\t}}\r\n\t\t\t\thandleVote={ handleVote }\r\n\t\t\t/>\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nconst CommentBox = ({ data, handleVote, handleMore }) => {\r\n\tif (!data) { console.error(\"\") }\r\n\tconst hoursAgoStr = data && convertToHoursAgo(data.created_utc*1000);\r\n\treturn (\r\n\t\t<div className=\"CommentBox\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<small className=\"author\">{ data.author } &#8226; { hoursAgoStr } </small>\r\n\t\t\t\t<div>{ Parser(decodeHtml(data.body_html)) }</div>\r\n\r\n\r\n\t\t\t\t<ThreadStatsBox \r\n\t\t\t\t\tdata={{ num_comments: data.replies && data.replies.data.children.length,\r\n\t\t\t\t\t\t\tscore: data.score,\r\n\t\t\t\t\t\t\tname: data.name,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\thandleVote={ handleVote } \r\n\t\t\t\t\ttype={ \"Replies\" }\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<br />\r\n\t\t\t\t{/* loop over replies and check if reply === comment || link id to more*/}\r\n\t\t\t\t{\r\n\t\t\t\t\tdata.replies && data.replies.data.children && data.replies.data.children.map((r, i) => r.kind === \"more\" ? \r\n\t\t\t\t\t\t<MoreButton key={i} { ...r } onClick={ handleMore } text={ `${r.data.count} more replies` } />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tr.data && <CommentBox { ...r } key={i} handleVote={ handleVote } handleMore={ handleMore } />)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Search.css\";\r\n\r\nimport { searchReddit, fetchReddit } from \"../services/user.service.js\";\r\nimport spaceOutNumber from \"../helpers/spaceOutNumber\";\r\n\r\nimport ThreadBox from \"../components/ThreadBox\";\r\nimport ErrorBox from \"../components/ErrorBox\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport MoreButton from \"../components/MoreButton\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nclass Search extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { loading: true, query: null, posts: null, subreddits: null }\r\n\t\tthis.getMoreSubreddits = this.getMoreSubreddits.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {   \r\n\t\tconst query = this.props.location.pathname.split(\"/\")[3];\r\n\r\n\t\tconst { subreddits, posts } = await searchReddit(query);\r\n\r\n    \tthis.setState({\r\n\t\t\tposts, \r\n    \t\tsubreddits, \r\n    \t\tloading: false, \r\n    \t\tquery\r\n    \t})\r\n\t}\r\n\r\n\tasync componentDidUpdate() {\r\n\t\tconst { query, loading } = this.state;\r\n  \t\tconst newQuery = this.props.location.pathname.split(\"/\")[3];\r\n\r\n  \t\tif (!loading && query !== newQuery) {\r\n        \tthis.setState({ loading: true });\r\n\r\n        \tconst { subreddits, posts } = await searchReddit(newQuery);\r\n\t\r\n    \t\tthis.setState({\r\n    \t\t\tsubreddits,\r\n\t\t\t\tposts,  \r\n    \t\t\tloading: false, \r\n    \t\t\tquery: newQuery\r\n    \t\t})\t\r\n\t\t}\r\n\t}\r\n\r\n\tasync getMoreSubreddits() {\r\n\t\tconst { query } = this.state;\r\n\t\tconst subreddits = await fetchReddit(`/subreddits/search.json?q=${query}&limit=25`);\r\n    \tthis.setState({ subreddits });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { posts, subreddits, loading, query } = this.state;\r\n\r\n\t\tif (loading) {\r\n    \t  \treturn ( <LoadingScreen /> );\r\n\t\r\n    \t} else if ((posts && subreddits) || subreddits || posts) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"Search\">\r\n\t\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<header className=\"SearchTitle\">\r\n\t\t\t\t\t\t\t<h2>Search results for <u>{ query }</u>:</h2>\r\n\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<section className=\"search-results\">\r\n\t\t\t\t\t\t\t<h3>Subreddits</h3>\r\n\t\t\t\t\t\t\t{ subreddits.data.children[0] ? subreddits.data.children.map((c, i) => <SubRedditBoxAlt { ...c } key={i} />) : <small>Wow, much empty o.O</small> }\r\n\t\t\t\t\t\t\t<MoreButton onClick={ this.getMoreSubreddits } text=\"Show more results\" />\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style={{ width: \"100%\", margin: \"40px auto\" }}></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<section className=\"search-results\">\r\n\t\t\t\t\t\t\t<h3>Posts</h3>\r\n\t\t\t\t\t\t\t{ posts.data.children[0] ? posts.data.children.map((c, i) => <ThreadBox { ...c } key={i} />) : <small>Wow, much empty o.O</small> }\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n// if status code || ganz weg\r\n\t\t} else {\r\n\t\t\treturn (<ErrorBox />);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Search;\r\n\r\nconst SubRedditBoxAlt = ({ data }) => {\r\n\tconsole.log(data)\r\n\treturn (\r\n\t\t<Link to={ `${uri}/r/${data.display_name}` } >\r\n\t\t<div className=\"SubRedditBoxAlt\">\r\n\t\t\t<div className=\"head\">\r\n\t\t\t\t<div className=\"subreddit-box-img\" style={{ backgroundImage: `url(${data.community_icon || data.icon_img})` }}></div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t<p><b>{ data.display_name_prefixed }</b></p>\r\n\t\t\t\t\t<small>{ spaceOutNumber(data.subscribers) } Subscribers</small>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<small className=\"description\">{ data.public_description || data.title }</small>\r\n\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}","import React, { Component } from 'react';\r\nimport './css/Frontpage.css';\r\n\r\nimport ThreadBox from \"../components/ThreadBox\";\r\nimport ErrorBox from \"../components/ErrorBox\";\r\nimport SortBox from \"../components/SortBox\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\n\r\nimport { fetchFrontpage } from \"../services/user.service.js\";\r\n// import history from \"../helpers/history\";\r\n      \r\n// const uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nclass Frontpage extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = { listing: null, loading: true, sort: { value: \"Hot\", top: \"Hour\" } };\r\n  this.handleSort = this.handleSort.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { mySubreddits, loggedIn } = this.props;\r\n\r\n    fetchFrontpage(mySubreddits)\r\n    .then(data => this.setState({ listing: data, loading: false }))\r\n    .catch(err => console.error(err))\r\n  }\r\n  \r\n  handleSort(e) {\r\n    const { mySubreddits, loggedIn } = this.props;\r\n    const sort = { value: e.target.form[0].value, top: e.target.form[1].value };\r\n    \r\n    this.setState({ loading: true, sort });\r\n\r\n    fetchFrontpage(mySubreddits, sort)\r\n    .then(data => this.setState({ listing: data, loading: false }))\r\n    .catch(err => console.error(err))\r\n  }\r\n\r\n  render() {\r\n    const { listing, loading, sort } = this.state;\r\n\r\n    if (loading) {\r\n      return ( <LoadingScreen /> );\r\n    \r\n    } else if (listing) {\r\n\t    return (\r\n\t      <div className=\"Frontpage\">\r\n\r\n          <div className=\"container\">\r\n          \r\n            <header className=\"SubTitle\">\r\n              <h2>Frontpage</h2>\r\n            </header>\r\n\r\n            <SortBox onChange={ this.handleSort } active={ sort } values={[ \"Hot\", \"New\", \"Controversial\", \"Top\" ]} />\r\n            { listing.data.children.map((post, i) => <ThreadBox { ...post } key={i} />) }\r\n          \r\n          </div>\r\n\t      </div>\r\n\t    );\r\n    } else {\r\n      return ( <ErrorBox /> );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Frontpage;","import React from \"react\";\r\nimport \"./css/UserBox.css\";\r\n// import history from \"../helpers/history\";\r\n\r\nconst UserBox = ({ loggedIn, user, logout }) => {\r\n\treturn (\r\n\t\t<div className=\"login-user-field\">\r\n\t\t{\r\n\t\t\tloggedIn && user ? <ActualUserBox user={ user } logout={ logout } /> : <LoginButton />\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UserBox;\r\n\r\nconst ActualUserBox = ({ user, logout }) => {\r\n\treturn (\r\n\t\t<div className=\"UserBox\">\r\n\t\t\t<div className=\"name-karma-container\">\r\n\t\t\t\t<div className=\"name\">{ user.name }</div>\r\n\t\t\t\t<div className=\"karma\">{ user.karma } Karma</div>\r\n\t\t\t</div>\r\n\t\t\t<img src={ user.img } alt=\"user_image\" />\r\n\t\t\t<button onClick={ logout } className=\"logout-btn\">Logout</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst LoginButton = () => {\r\n\tconst { REACT_APP_DURATION, REACT_APP_SCOPE, REACT_APP_SECRET_STRING } = process.env;\r\n\tconst CLIENT_ID = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_CLIENT_ID : process.env.REACT_APP_CLIENT_ID_DEV;\r\n\tconst URI = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_URI : process.env.REACT_APP_URI_DEV;\r\n\treturn (\r\n\t\t<a className=\"login-btn\"\r\n\t\t\thref={ `https://www.reddit.com/api/v1/authorize\r\n\t\t\t?client_id=${CLIENT_ID}\r\n\t\t\t&response_type=token\r\n\t\t\t&state=${REACT_APP_SECRET_STRING}\r\n\t\t\t&redirect_uri=${URI}\r\n\t\t\t&duration=${REACT_APP_DURATION}\r\n\t\t\t&scope=${REACT_APP_SCOPE}` }>\r\n\t\t    <i className=\"fas fa-user\"></i>\r\n\t\t</a>\r\n\t);\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/NavBar.css\";\r\n\r\nimport UserBox from \"./UserBox\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { isHidden: false };    \r\n\t\tthis.onScroll = () => {  \r\n  \t\t    if (window.scrollY > this.prev) {\r\n\t\t\t\tthis.setState({ isHidden: true });\r\n  \t\t    } else {\r\n  \t\t        this.setState({ isHidden: false });\r\n  \t\t    }\r\n  \t\t    this.prev = window.scrollY;\r\n  \t\t}\r\n  \t}\r\n  \tcomponentDidMount() {\r\n  \t  window.addEventListener(\"scroll\", this.onScroll);\r\n  \t}\r\n  \tcomponentWillUnmount() {\r\n  \t  window.removeEventListener(\"scroll\", this.onScroll);\r\n  \t}\r\n\r\n  \trender() {\r\n\t\tconst { loggedIn, user, handleSideBar, onSubmit, logout } = this.props;\r\n\t\tconst { isHidden } = this.state;\r\n\t\r\n\t\treturn (\r\n\t\t\t<nav  className={ isHidden ? \"navbar hide\" : \"navbar\" } >\r\n\t\t\t\t\r\n\t\t\t\t<i onClick={ handleSideBar } className=\"fas fa-bars\"></i>\r\n\t\t\t\t\r\n\t\t\t\t<Link to={`${uri}/`} className=\"link\"><div className=\"logo\">For Reddit To Go</div></Link>\t\r\n\t\r\n\t\t\t\t<form onSubmit={ onSubmit } >\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"search reddit\" />\r\n\t\t\t\t\t<button type=\"submit\"><i className=\"fas fa-search\"></i></button>\r\n\t\t\t\t</form>\r\n\t\r\n\t\t\t\t<UserBox loggedIn={ loggedIn } user={ user } logout={ logout } />\r\n\t\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/SubRedditTab.css\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nconst SubRedditTab  = ({ subreddits, isOpen, handleSideBar, loggedIn }) => {\r\n\treturn (\r\n\t\t<div className={ isOpen ? \"SubRedditTab SubRedditTab-active\" : \"SubRedditTab\" }>\r\n\t\t\t<div className=\"sub-reddit-tab-top\">\r\n\t\t\t\t<Link className=\"logo\" to={ `${uri}/` } onClick={ handleSideBar }>For Reddit To Go</Link>\r\n\t\t\t\t<i className=\"fas fa-times\" onClick={ handleSideBar }></i>\r\n\t\t\t</div>\t\r\n\t\t\t\t\t\t\r\n\t\t\t<div className=\"about-link\"><Link to={`${uri}/about/`} >About</Link></div>\r\n\t\t\t\r\n\t\t\t{ subreddits && subreddits.map((sub, i) => <SubRedditBox handleSideBar={ handleSideBar } key={i} { ...sub } />)}\r\n\t\t\t{ !subreddits && <div className=\"not-logged-in\">Log in to see a list of your subscribed subreddits.</div> }\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SubRedditTab;\r\n\r\n\r\nconst SubRedditBox = ({ data, handleSideBar }) => {\r\n\r\n\treturn (\r\n\t\t<Link to={ `${uri}/r/${data.display_name}` } onClick={ handleSideBar } className=\"subreddit-box\">\r\n\t\t\t<div className=\"subreddit-box-img\" style={{ backgroundImage: `url(${data.community_icon || data.icon_img})` }}></div>\r\n\t\t\t<h3>{ data.display_name_prefixed }</h3>\r\n\t\t</Link>\r\n\t);\r\n}","import React, { Component } from 'react';\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport history from \"./helpers/history\";\r\nimport './App.css';\r\n\r\n// import config from \"./config\";\r\nimport { tryLogin, logout } from \"./services/auth.service.js\";\r\n\r\nimport About from \"./containers/About\";\r\nimport Sub from \"./containers/Sub\";\r\nimport Thread from \"./containers/Thread\";\r\nimport Search from \"./containers/Search\";\r\nimport Frontpage from \"./containers/Frontpage\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport SubRedditTab from \"./components/SubRedditTab\";\r\n      \r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nclass App extends Component {\r\n  \tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { user: null, mySubreddits: null, loggedIn: false, sidebarIsOpen: false }\r\n    this.handleSideBar = this.handleSideBar.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  \t}\r\n\r\n  \tcomponentDidMount() {\r\n      tryLogin()\r\n        .then(data => {\r\n          this.setState({\r\n            user: data[0],\r\n            mySubreddits: data[1].data.children,\r\n            loggedIn: true \r\n          });\r\n          // history.push(`${uri}/frontpage`);\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        })\r\n  \t}\r\n\r\n    handleSideBar(e) {\r\n        this.setState({ sidebarIsOpen: !this.state.sidebarIsOpen });\r\n    }\r\n\r\n  \thandleSearch(e) {\r\n      e.preventDefault();\r\n      const query = e.target[0].value;\r\n      history.push(`${uri}/search/${query}`);\r\n    }\r\n\r\n    logout(e) {\r\n      logout();\r\n      this.setState({ user: null, mySubreddits: null, loggedIn: false });\r\n    }\r\n\r\n  \trender() {\r\n\t\t  const { mySubreddits, loggedIn, user, sidebarIsOpen } = this.state;\r\n      const sanitizedUser = user ? { name: user.name, karma: user.comment_karma, img: user.icon_img } : null;\r\n  \r\n      return (\r\n\t\t  \t<Router history={ history }>\r\n\t\t    \t\r\n          <div className=\"App\">\r\n\t\t  \t\t  <NavBar loggedIn={ loggedIn } user={ sanitizedUser } handleSideBar={ this.handleSideBar } onSubmit={ this.handleSearch } logout={ this.logout } />\r\n    \r\n\t\t  \t\t  <SubRedditTab subreddits={ mySubreddits } isOpen={ sidebarIsOpen } handleSideBar={ this.handleSideBar } />\r\n    \r\n\t\t  \t\t  <Switch>\r\n\t\t  \t\t  \t<Route exact path={ `${uri}/frontpage` } render={ props => <Frontpage mySubreddits={ mySubreddits } loggedIn={ loggedIn } { ...props } /> } />\r\n\t\t  \t\t  \t<Route path={ `${uri}/r/:subreddit/:title` } component={Thread} />\r\n              <Route path={ `${uri}/r` } component={Sub} />\r\n              <Route path={ `${uri}/search/:query` } component={Search} />\r\n              <Route path={ `${uri}/loginsuccess` } component={LoginSuccess} />\r\n              <Route path={ `${uri}/` } component={About} />\r\n              <Route path={ `${uri}/about` } component={About} />\r\n\t\t  \t\t  </Switch>\t\r\n\t\t    \t</div>\r\n          \r\n\t\t    </Router>\r\n\t\t  );\r\n  \t}\r\n}\r\n\r\nexport default App;\r\n\r\nconst LoginSuccess = () => {\r\n  // works, because app remounts on login redirect\r\n  // and tryLogin() in compDidMount() fires again\r\n  setTimeout(() => history.push(uri), 100);\r\n  return (\r\n    <div>\r\n      <h2>Login Success!</h2>\r\n      <p>You will be redirected shortly.</p>\r\n    </div>\r\n  );\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}