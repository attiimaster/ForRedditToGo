{"version":3,"sources":["services/speech.service.js","helpers/history.js","helpers/getHashValue.js","helpers/convertToHoursAgo.js","components/AuthorHeader.jsx","components/ThreadBox.jsx","components/SortBox.jsx","components/LoadingScreen.jsx","containers/Home.jsx","components/ErrorBox.jsx","containers/Sub.jsx","helpers/print.js","components/Synth.jsx","components/MoreButton.jsx","services/user.service.js","helpers/decodeHtml.js","containers/Thread.jsx","containers/Search.jsx","components/NavBar.jsx","components/SubRedditTab.jsx","App.js","registerServiceWorker.js","index.js"],"names":["synth","voice","createBrowserHistory","getHashValue","key","matches","window","location","hash","match","RegExp","convertToHoursAgo","then","now","Date","converted","Math","round","i","indexOf","slice","AuthorHeader","props","r","author","date","hoursAgoStr","react_default","a","createElement","className","Link","to","concat","ThreadBox","_ref","data","subreddit","id","score","components_AuthorHeader","subreddit_name_prefixed","created_utc","title","selftext","url","href","target","rel","split","num_comments","SortBox","onChange","values","active","value","map","v","toLowerCase","top","topValues","LoadingScreen","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","listing","loading","sort","handleSort","bind","assertThisInitialized","_this2","_this$props","mySubreddits","loggedIn","arr","sub","display_name","fetch","join","res","json","setState","catch","err","console","error","e","_this3","form","_this$props2","_this$state","components_LoadingScreen","Home_Banner","components_SortBox","children","post","components_ThreadBox","assign","Home_Sections","Component","Banner","alt","src","process","Sections","ErrorBox","Sub","currentSub","pathname","_this4","_this$state2","c","components_ErrorBox","print","toPrint","log","document","getElementById","insertAdjacentHTML","tries","loadVoices","voices","getVoices","length","find","test","lang","setTimeout","convertListingToScript","readmode","script","comments","push","cleanString","body","pushReplies","replies","kind","child","str","replace","speechSynthesis","Synth","logIsOpen","position","isOn","handleLog","handleReadMode","play","back","skip","stop","speaking","cancel","mapScriptToUtteranceQueue","previous","_this$state3","next","_this$state4","onClick","Synth_SynthBtn","icon","SynthBtn","done","text","message","speech","SpeechSynthesisUtterance","volume","rate","pitch","addEventListener","onstart","onend","onpause","onresume","onerror","speak","readOut","MoreButton","parentId","parent_id","findInListingAndInsert","ArraytoInsert","Promise","resolve","reject","comment","pop","toInsert","findIdInRepliesAndInsert","decodeHtml","html","txt","innerHTML","containers_Thread","Thread","toRead","handleMore","path","name","attributes","dir","token","localStorage","getItem","method","headers","Authorization","link_id","substring","things","newListing","_this5","threadInfo","components_Synth","Thread_ThreadHead","handleVote","Thread_CommentBox","ThreadHead","selftext_html","Parser","CommentBox","_ref2","body_html","components_MoreButton","count","Search","query","posts","subreddits","newQuery","Search_SubRedditBoxAlt","style","width","margin","borderTop","SubRedditBoxAlt","backgroundImage","header_img","display_name_prefixed","subscribers","public_description","NavBar","isHidden","onScroll","scrollY","prev","removeEventListener","_process$env","REACT_APP_DURATION","REACT_APP_SCOPE","REACT_APP_SECRET_STRING","user","handleSideBar","onSubmit","type","placeholder","NavBar_UserBox","UserBox","karma","img","removeItem","history","SubRedditTab","isOpen","SubRedditTab_SubRedditBox","SubRedditBox","uri","App","sidebarIsOpen","handleSearch","accessToken","setItem","fetchUser","fetchMySubs","preventDefault","sanitizedUser","comment_karma","icon_img","Router","components_NavBar","components_SubRedditTab","Switch","Route","exact","component","containers_Home","options","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","URL","origin","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ab74b221.chunk.js","sourcesContent":["import print from \"../helpers/print\";\r\n\r\nlet synth;\r\nlet voice;\r\n\r\n// load voices, and try again if it fails\r\nlet tries = 0;\r\n\r\nif ('speechSynthesis' in window) {\r\n  synth = window.speechSynthesis;\r\n  loadVoices();\r\n}\r\n\r\nfunction loadVoices() {\r\n\ttries++;\r\n\tconst voices = synth.getVoices();\r\n\tif (voices.length) {\r\n\t\tvoice = voices.find(v => /en[-_]US/.test(v.lang));\t// regex because android\r\n\t}\r\n\tif (!voice) {\r\n\t\tif (tries < 10) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tloadVoices();\r\n\t\t\t}, 250);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"en-US voice not found.\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// takes string and starts reading out lout\r\n// done takes (err, event)\r\nexport function readOut(message, done) {\r\n\tconsole.log(\"readOut\");\r\n    const speech = new SpeechSynthesisUtterance(message);\r\n\r\n    // find voice\r\n\tconst voices = synth.getVoices();\r\n\tloadVoices();\r\n\r\n\t// Set text and voice attributes\r\n\tspeech.lang = \"en-US\";\r\n\tspeech.volume = 1;\r\n\tspeech.rate = 1;\r\n\tspeech.pitch = 1;\r\n\tspeech.voice = voice;\r\n\r\n\t// Custom Error Handler\r\n\tspeech.addEventListener(\"error\", error => console.error(error));\r\n\r\n\t// Register Event Handlers\r\n\tspeech.onstart = (e) => {\r\n\t\tprint(`array char count: ${message.length} (32,767 max)`);\r\n\t\tconsole.log(e)\r\n\t\tconsole.log(\"SPEECH START!\");\r\n\t\tprint(\"SPEECH started.\");\r\n\t}\r\n\tspeech.onend = (e) => {\r\n\t\tconsole.log(\"SPEECH END!\");\r\n\t\tprint(\"SPEECH ended.\");\r\n\t\tdone && done(null, e);\r\n\t}\r\n\tspeech.onpause = () => {\r\n\t\tconsole.log(\"SPEECH PAUSE!\");\r\n\t\tprint(\"SPEECH paused.\");\r\n\t}\r\n\tspeech.onresume = () => {\r\n\t\tconsole.log(\"SPEECH RESUME!\");\r\n\t\tprint(\"SPEECH resumed.\");\r\n\t}\r\n\tspeech.onerror = (e) => {\r\n\t\tconsole.log(\"SPEECH ERROR!\");\r\n\t\tprint(`SPEECH ERROR!`);\r\n\t\tdone && done(\"ERROR reading out.\", e);\r\n\t}\r\n\t\r\n\t// start playback\r\n\tsynth.speak(speech);\r\n}\r\n\r\n// makes array of strings to pass to speechSynthesis;\r\nexport function convertListingToScript(listing, readmode) {\r\n\tlet script = [];\r\n\r\n\tconst title =  listing[0].data.children[0].data.title;\r\n\tconst post = listing[0].data.children[0].data.selftext;\r\n\tconst comments = listing[1].data.children;\r\n\r\n\t// push title, post and comments to array in order and read out\r\n\ttitle && script.push(cleanString(title));\r\n\tpost && script.push(cleanString(post));\r\n\r\n\t// push comments and replies to array\r\n\tcomments.map((c, i) => {\r\n\t\tscript.push(` ${c.data.author} comments: ? ` + cleanString(c.data.body));\r\n\t\t\r\n\t\tif (readmode === \"STANDARD\") {\r\n\t\t\tpushReplies(c.data.replies, script);\r\n\t\t}\r\n\t});\r\n\treturn script;\r\n}\r\n\r\n// recursively add replies to script array\r\nfunction pushReplies(replies, script) {\r\n\r\n\tif (replies && replies.kind !== \"more\") {\r\n\r\n\t\t// the replies object is a \"listing\" and NOT the actual array\r\n\t\tconst children = replies.data.children;\r\n\r\n\t\t// loop over children\r\n\t\tchildren.map((child, i) => {\r\n\r\n\t\t\t// check if actual replies and not just links to fetch more replies\r\n\t\t\tif (child.kind !== \"more\") {\r\n\r\n\t\t\t\t// if it is push reply body to array\r\n\t\t\t\tscript.push(` ${child.data.author} replies: ? ` + cleanString(child.data.body));\r\n\r\n\t\t\t\t// call self with the replies of the reply\r\n\t\t\t\tpushReplies(child.data.replies, script);\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\t\r\n}\r\n\r\n// remove special symbols from strings by defining what NOT to remove\r\nfunction cleanString(str) {\r\n\tif (!str) {\r\n\t\treturn null;\r\n\t}\r\n\treturn str.replace(/[^\\w\\s.:,_$@%;-=`´'/!?]/gi, '');\r\n}","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();","const getHashValue = key => {\r\n\t// if (!key)\r\n  \tconst matches = window.location.hash.match(new RegExp(key+'=([^&]*)'));\r\n  \treturn matches ? matches[1] : null;\r\n}\r\n\r\nexport default getHashValue;","const convertToHoursAgo = then => {\r\n  // then has to be a UNIX string\r\n  const now = Date.now();\r\n\r\n  // time since \"then\" in seconds\r\n  let converted = Math.round((now - then) / 1000);\r\n\r\n  // determine which unit is appropriate\r\n  if (converted < 10) {\r\n    converted = \"Just now\";\r\n  } else if (converted < 60) {\r\n    converted = Math.round(converted) + \" seconds ago\";\r\n  } else if (converted < 60*60) {\r\n    converted = Math.round(converted / 60) + \" minutes ago\";\r\n  } else if (converted < 60*60*24) {\r\n    converted = Math.round(converted / (60*60)) + \" hours ago\";\r\n  } else if (converted < 60*60*24*30) {\r\n    converted = Math.round(converted / (60*60*24)) + \" days ago\";\r\n  } else if (converted < 60*60*24*365) {\r\n    converted = Math.round(converted / (60*60*24*30)) + \" months ago\";\r\n  } else if (converted >= 60*60*24*365) {\r\n    converted = Math.round(converted / (60*60*24*365)) + \" years ago\";\r\n  }\r\n\r\n  // if singular remove \"s\" from units\r\n  if (converted[0] < 2) {\r\n    const i = converted.indexOf(\"s\");\r\n    converted = converted.slice(0, i) + \" ago\";\r\n  }\r\n  return converted;\r\n}\r\n\r\nexport default convertToHoursAgo;","import React from \"react\";\r\nimport convertToHoursAgo from \"../helpers/convertToHoursAgo\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nconst AuthorHeader = props => {\r\n\tconst { r, author, date } = props;\r\n\tconst hoursAgoStr = convertToHoursAgo(date*1000);\r\n\treturn (\r\n\t\t<small className=\"AuthorHeader\">\r\n\t\t\t<span  className=\"subreddit\"><Link to={ `${uri}/${r}` }>{ r }</Link></span>\r\n\t\t\t<span  className=\"author\"> &#8226; Posted by u/{ author }</span>\r\n\t\t\t<span  className=\"time\"> &#8226; { hoursAgoStr }</span>\r\n\t\t</small>\r\n\t);\r\n}\r\n\r\nexport default AuthorHeader;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Parser from \"html-react-parser\";\r\nimport \"./css/ThreadBox.css\";\r\n\r\nimport AuthorHeader from \"../components/AuthorHeader\";\r\n// import decodeHtml from \"../helpers/decodeHtml\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nconst ThreadBox = ({ data }) => {\r\n\treturn (\r\n\t\t<Link to={ `${uri}/r/${data.subreddit}/${data.id}` } className=\"ThreadBox\" >\r\n\r\n\t\t\t<small className=\"score\">\r\n\t\t\t\t<span>{ data.score }</span>\r\n\t\t\t</small>\r\n\t\t\t\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<AuthorHeader r={ data.subreddit_name_prefixed } author={ data.author } date={ data.created_utc } />\r\n\r\n\t\t\t\t{ data && <h3>{ data.title }</h3> }\r\n\t\t\t\t{ data.selftext ? <p className=\"selftext\">{ data.selftext }</p> : <p>{ \"This post contains media only. Follow the link to find out more.\" }</p> }\t\t\t\t\r\n\r\n\t\t\t\t{/* data.media && data.media.reddit_video && <div className=\"media-wrapper\"><iframe className=\"media\" src={ data.media.reddit_video.scrubber_media_url } ></iframe></div> */}\r\n\t\t\t\t{/* data.preview && data.preview.reddit_video_preview && <iframe src={ data.preview.reddit_video_preview.scrubber_media_url } ></iframe> */}\r\n\t\t\t\t{/* data.media && \"media\" */}\r\n\t\t\t\t{/* data.media_embed.content && Parser(decodeHtml(data.media_embed.content)) */}\r\n\t\t\t\t{ data.url && data.url.slice(0, 23) !== \"https://www.reddit.com/\" && <a href={ data.url } target=\"_blank\" rel=\"noopener noreferrer\"><div>{ data.url.split(\"/\")[2] }</div></a> }\r\n\r\n\t\t\t\t<div className=\"stats\">\r\n\t\t\t\t\t<small>\r\n\t\t\t\t\t\t<span>{ `${data.num_comments} Comments` }</span>\r\n\t\t\t\t\t</small>\r\n\t\t\t\t\t<small className=\"score-mobile\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up\"></i>\r\n\t\t\t\t\t\t\t{ ` ${data.score} Upvotes ` }\r\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-down\"></i>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default ThreadBox;","import React from \"react\";\r\nimport \"./css/SortBox.css\";\r\n\r\n// active.value === sort value like hot, top, controversial\r\n// active.top === sort value for top like week, month, all\r\n\r\nconst SortBox = ({ onChange, values, active }) => {\r\n\treturn (\r\n\t\t<form className=\"SortBox\" onChange={ onChange }>\r\n\t\t\t<span>Sort by</span>\r\n\t\t\t<select value={ active.value || active }>\r\n\t\t\t\t{ values && values.map((v, i) => <option value={ v.toLowerCase() } key={i} >{ v }</option>) }\r\n\t\t\t</select>\r\n\r\n\t\t\t{ active.top &&\r\n\t\t\t<select value={ active.top } className={ active.value === \"top\" ? \"SortBox-top SortBox-top-active\" : \"SortBox-top\" }>\r\n\t\t\t\t{ topValues.map((v, i) => <option value={ v.toLowerCase() } key={i} >{ v }</option>) }\r\n\t\t\t</select>\r\n\t\t\t}\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default SortBox;\r\n\r\nconst topValues = [\"Hour\", \"Day\", \"Week\", \"Month\", \"Year\", \"All\"];","import React from \"react\";\r\nimport \"./css/LoadingScreen.css\";\r\n\r\nconst LoadingScreen = () => {\r\n\treturn (\r\n\t\t<div className=\"LoadingScreen\">\r\n\t\t<div>\r\n\t\t\t<h1>LOADING</h1>\r\n\t\t\t<div className=\"spinner\"></div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LoadingScreen;","import React, { Component } from 'react';\r\nimport './css/Home.css';\r\n\r\nimport ThreadBox from \"../components/ThreadBox\";\r\nimport SortBox from \"../components/SortBox\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = { listing: null, loading: true, sort: { value: \"Hot\", top: \"Hour\" } };\r\n  this.handleSort = this.handleSort.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { mySubreddits, loggedIn } = this.props;\r\n\r\n    if (mySubreddits && loggedIn) {\r\n      const arr = mySubreddits.map(sub => sub.data.display_name);\r\n\r\n      fetch(`https://www.reddit.com/r/${arr.join(\"+\")}/.json?limit=100`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ listing: data, loading: false }))\r\n      .catch(err => console.error(err))\r\n    } else {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  handleSort(e) {\r\n    this.setState({ loading: true, sort: { value: e.target.form[0].value, top: e.target.form[1].value } });\r\n\r\n    const { mySubreddits, loggedIn } = this.props;\r\n\r\n    if (mySubreddits && loggedIn) {\r\n      const arr = mySubreddits.map(sub => sub.data.display_name);\r\n\r\n      const top = e.target.form[0].value === \"top\" ? `&t=${e.target.form[1].value}` : \"\";\r\n\r\n      fetch(`https://www.reddit.com/r/${arr.join(\"+\")}/${e.target.form[0].value}.json?limit=100${top}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ listing: data, loading: false }))\r\n      .catch(err => console.error(err))\r\n    } else {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { listing, loading, sort } = this.state;\r\n\r\n    if (loading) {\r\n      return ( <LoadingScreen /> );\r\n    \r\n    } else {\r\n\t    return (\r\n\t      <div className=\"Home\">\r\n          \r\n          <Banner />\r\n          \r\n          {\r\n            listing ? \r\n            <div className=\"container\">\r\n              <SortBox onChange={ this.handleSort } active={ sort } values={[ \"Hot\", \"New\", \"Controversial\", \"Top\" ]} />\r\n              { listing.data.children.map((post, i) => <ThreadBox { ...post } key={i} />) }\r\n            </div>\r\n            :\r\n            <Sections />\r\n          }\r\n    \r\n\t      </div>\r\n\t    );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <header className=\"home-banner\">\r\n        <div className=\"banner-text\">\r\n          <h1>For Reddit,To Go</h1>\r\n        </div>\r\n        <img alt=\"\" src={ `${process.env.PUBLIC_URL}/images/walker.png` } />\r\n    </header>\r\n  );\r\n}\r\nconst Sections = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"frontpage-section\">\r\n        <h1>Listen to Reddit, while getting stuff done.</h1>\r\n        <p>Reddit To Go is a web application intended for portable devices that leverages the <b>Text to Speech</b> features of modern browsers to read out reddit threads. For now please consider using the latest version of <b>Google Chrome</b> or <b>Mozilla Firefox</b> to ensure functionality and the best possible user experience.</p>\r\n        <p>RedditToGo fits some subreddits more than others. Where it excels are textbased threads and comment trees. Accessing threads that share images, videos or links is possible, but for now you will have to follow the link to the original source to consume it.</p>\r\n        <p>Features like messaging, mod features, etc are not included for now, because this is meant to be a complementary service one can use if needed.</p>\r\n        <p>If you want to suggest or contribute a feature, feel free to contact me on my page or on github.</p> \r\n      </section>\r\n  \r\n      <section className=\"frontpage-section\">\r\n        <h1>How to use / main features</h1>\r\n        <p>When reading a thread a user may use the synthesizer buttons to control the speech synthesis. Pressing <b>PLAY</b> will read the thread from beginning to end. You may skip or relisten to individual posts by using the <b>BACK</b> / <b>SKIP</b> buttons respectively. <b>STOP</b> will halt and cancel all queued messages.</p>\r\n        <p>You may also select a <b>READMODE</b>. For now there is <b>STANDARD</b> and <b>TOP CMNTS</b>. <b>STANDARD</b> will read the thread as is with all comments including some (or all, depending on the volume) high rated replies, while <b>TOP CMNTS</b> only reads out comments without reading out any replies.</p>\r\n        <p>Comments get initialized with the phrase: <i>USERNAME comments...</i> while replies get initialized with <i>USERNAME replies...</i></p>\r\n      </section>\r\n  \r\n      <section className=\"frontpage-section\">\r\n        <h1>Contact</h1>\r\n        <p>If you find any bugs or have suggestions please feel free to contact me on my page or on github. I built this project for myself initially, but figured some people might find it useful. I would be stoked to improve <b>For Reddit, To Go</b> for others aswell.</p>\r\n        \r\n        <div className=\"socialmedia-icons\">\r\n          <a href=\"https://raphaelmayer.github.io/go\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fas fa-envelope\"></i></a>\r\n          <a href=\"https://github.com/raphaelmayer/ForRedditToGo\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nconst ErrorBox = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tThere seems to be an error. Please try again and check your URL.\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ErrorBox;","import React, { Component } from 'react';\r\nimport './css/Sub.css';\r\n\r\nimport ThreadBox from \"../components/ThreadBox\";\r\nimport ErrorBox from \"../components/ErrorBox\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport SortBox from \"../components/SortBox\";\r\n\r\nclass Sub extends Component {\r\n  constructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { listing: null, currentSub: null, loading: true, sort: { value: \"hot\", top: \"hour\" } };\r\n    this.handleSort = this.handleSort.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  \tconst path = this.props.location.pathname;\r\n  \tconst subreddit = path.split(\"/\")[3];\r\n  \t\r\n  \tfetch(`https://www.reddit.com/r/${subreddit}/.json?limit=100`)\r\n  \t.then(res => res.json())\r\n  \t.then(data => this.setState({ listing: data, currentSub: subreddit, loading: false }))\r\n  \t.catch(err => this.setState({ listing: null, currentSub: subreddit, loading: false }))\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n  \tconst path = this.props.location.pathname;\r\n  \tconst subreddit = path.split(\"/\")[3];\r\n    const { loading, currentSub, sort } = this.state;\r\n  \tif (!loading && currentSub !== subreddit) {\r\n      if (!loading) { this.setState({ loading: true }); }\r\n\r\n      const top = sort.value === \"top\" ? `&t=${sort.top}` : \"\";\r\n  \t\t\r\n      fetch(`https://www.reddit.com/r/${subreddit}/${sort.value}/.json?limit=100${top}`)\r\n  \t\t.then(res => res.json())\r\n  \t\t.then(data => this.setState({ listing: data, currentSub: subreddit, loading: false }))\r\n  \t\t.catch(err => this.setState({ listing: null, currentSub: subreddit, loading: false }))\r\n  \t}\r\n  }\r\n  \r\n  handleSort(e) {\r\n    this.setState({ loading: true, sort: { value: e.target.form[0].value, top: e.target.form[1].value } });\r\n    const path = this.props.location.pathname;\r\n    const subreddit = path.split(\"/\")[3];\r\n\r\n    const top = e.target.form[0].value === \"top\" ? `&t=${e.target.form[1].value}` : \"\";\r\n\r\n    fetch(`https://www.reddit.com/r/${subreddit}/${e.target.form[0].value}/.json?limit=100${top}`)\r\n    .then(res => res.json())\r\n    .then(data => this.setState({ listing: data, currentSub: subreddit, loading: false }))\r\n    .catch(err => this.setState({ listing: null, currentSub: subreddit, loading: false }))\r\n  }\r\n  \r\n  render() {\r\n\tconst { listing, loading, sort } = this.state;\r\n    \r\n\t\tif (loading) {\r\n      return ( <LoadingScreen /> );\r\n\r\n    } else if (listing && listing.data) {\r\n      const children = listing.data.children;\r\n\r\n      return (\r\n        <div className=\"Sub\">\r\n\r\n          <header className=\"SubTitle\">\r\n            <h2>r/{ children[0] && children[0].data.subreddit }</h2>\r\n          </header>\r\n\r\n          <div className=\"container\">\r\n            <SortBox onChange={ this.handleSort } active={ sort } values={[ \"Hot\", \"New\", \"Controversial\", \"Top\" ]} />\r\n            { children.map((c, i) => <ThreadBox { ...c } key={i} /> )}\r\n          </div>\r\n        </div>\r\n      );\r\n    \r\n    } else {\r\n      return ( <ErrorBox /> );\r\n\t  }\r\n\t}\r\n}\r\n\r\nexport default Sub;\r\n\r\n","// print to Log\r\nconst print = toPrint => {\r\n\tconst log = document.getElementById(\"log\");\r\n\tlog && log.insertAdjacentHTML(\"beforeend\", `<small><b>${toPrint}</b></small>`);\r\n}\r\n\r\nexport default print;\r\n    ","import React, { Component } from \"react\";\r\nimport \"./css/Synth.css\";\r\n\r\nimport { readOut, convertListingToScript } from \"../services/speech.service.js\";\r\nimport print from \"../helpers/print\";\r\n\r\nclass Synth extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\tlogIsOpen: false, \r\n\t\t\tlisting: null,\r\n\t\t\treadmode: \"STANDARD\", // STANDARD, TOP_COMMENTS, COMMENT_TREE\r\n\t\t\tscript: null,\r\n\t\t\tposition: 0,\r\n\t\t\tisOn: false\r\n\t\t};\r\n\t\tthis.handleLog = this.handleLog.bind(this);\r\n\t\tthis.handleReadMode = this.handleReadMode.bind(this);\r\n\t\tthis.play = this.play.bind(this);\r\n\t\tthis.back = this.back.bind(this);\r\n\t\tthis.skip = this.skip.bind(this);\r\n\t\tthis.stop = this.stop.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tconst { listing } = this.props;\r\n\t\tlisting && this.setState({ listing });\r\n\t}\r\n\r\n\t// button handlers\r\n\tplay(e) {\r\n\t\tconst { listing, position, readmode } = this.state;\r\n\t\t\r\n\t\t// START\r\n\t\tif (!window.speechSynthesis.speaking) {\r\n\t\t\tprint(\"START EVENT\");\r\n\r\n\t\t\t// convert listing to an array of strings\r\n\t\t\t// where each item represents one title, post, comment or reply\r\n\t\t\tconst script = convertListingToScript(listing, readmode);\r\n\r\n\t\t\t// push all items onto the utterance queue with a callback\r\n\t\t\tmapScriptToUtteranceQueue(position, script, (err, e) => {\r\n\t\t\t\tthis.setState({ position: this.state.position + 1 });\r\n\t\t\t});\r\n\r\n\t\t\t// set state to track position for back and skip functionality\r\n\t\t\tthis.setState({ isOn: true, script, position });\r\n\r\n\t\t// PAUSE\r\n\t\t} else {\r\n\t\t\tprint(\"TOGGLE PAUSE EVENT\");\r\n\t\t\twindow.speechSynthesis.cancel();\r\n\r\n\t\t\t// cancel() increments position once, see readOut callback\r\n\t\t\tthis.setState({ isOn: false, position: position - 1 });  \r\n\t\t}\r\n\t}\r\n\tback(e) {\r\n\t\tprint(\"BACK EVENT\");\r\n\t\tconst { script, position } = this.state;\r\n\t\tconst previous = position < 2 ? 0 : position - 1;\r\n\r\n\t\tmapScriptToUtteranceQueue(previous, script, (err, e) => {\r\n\t\t\tthis.setState({ position: this.state.position + 1 });\r\n\t\t});\r\n\t\t\r\n\t\t// cancel() increments position once, see readOut callback \t\r\n\t\tif (window.speechSynthesis.speaking) {\r\n\t\t\tthis.setState({ position: previous - 1, isOn: true });  \r\n\t\t} else {\r\n\t\t\tthis.setState({ position: previous, isOn: true });  \r\n\t\t}\r\n\t}\r\n\tskip(e) {\r\n\t\tprint(\"SKIP EVENT\");\r\n\t\tconst { script, position } = this.state;\r\n\t\tconst next = position + 1;\r\n\r\n\t\tmapScriptToUtteranceQueue(next, script, (err, e) => {\r\n\t\t\tthis.setState({ position: this.state.position + 1 });\r\n\t\t});\r\n\r\n\t\t// cancel() increments position once, see readOut callback\r\n\t\tif (window.speechSynthesis.speaking) {\r\n\t\t\tthis.setState({ position: next - 1, isOn: true });\r\n\t\t} else {\r\n\t\t\tthis.setState({ position: next, isOn: true });\r\n\t\t}\r\n\t}\r\n\tstop(e) {\r\n\t\tprint(\"STOP EVENT\");\r\n\t\tconst { isOn } = this.state;\r\n\t\twindow.speechSynthesis.cancel();\r\n\r\n\t\t// cancel() increments position once, see readOut callback\r\n\t\t// isOn to prevent multiple clicks\r\n\t\tisOn && this.setState({ isOn: false, position: -1, script: null }); \r\n\t}\r\n\r\n\thandleLog(e) {\r\n\t\tthis.setState({ logIsOpen: !this.state.logIsOpen });\r\n\t}\r\n\r\n\thandleReadMode(e) {\r\n\t\tthis.setState({ readmode: e.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { logIsOpen, isOn, readmode, position, script } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Synth\">\r\n\r\n\t\t\t\t<i onClick={ this.handleLog } className=\"fas fa-bars\"></i>\r\n\t\t\t\t<div id=\"log\" className={ logIsOpen ? \"\" : \"hidden\" }><p><u>DebugLog</u></p></div>\r\n\t\t\t\t<div className=\"synth-name\">Synthesizer 2000</div>\r\n\t\t\t\r\n\t\t\t\t<div className=\"readmode\">Mode: \r\n\t\t\t\t\t<select onChange={ this.handleReadMode } value={ readmode } >\r\n\t\t\t\t\t\t<i className=\"fas fa-ellipsis-h\"></i>\r\n\t\t\t\t\t\t<option value=\"STANDARD\">Standard</option>\r\n\t\t\t\t\t\t<option value=\"TOP_COMMENTS\">Top cmnts</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<span className=\"position\">{ `${position} / ${script && script.length || \" - \" }` }</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"synth-btn-container\">\t\r\n\t\t\t\t\t<SynthBtn icon={ isOn ? \"fas fa-pause\" : \"fas fa-play\" } onClick={ this.play } />\r\n\t\r\n\t\t\t\t\t<SynthBtn icon=\"fas fa-backward\" onClick={ this.back } />\r\n\r\n\t\t\t\t\t<SynthBtn icon=\"fas fa-forward\" onClick={ this.skip } />\r\n\t\r\n\t\t\t\t\t<SynthBtn icon=\"fas fa-stop\" onClick={ this.stop } />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Synth;\r\n\r\nconst SynthBtn = ({ icon, onClick }) => {\r\n\treturn (\r\n\t\t<div  className=\"synth-btn\" onClick={ onClick } >\r\n\t\t\t<i className={ icon } id=\"playbtn\"></i>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction mapScriptToUtteranceQueue(position, script, done) {\r\n\twindow.speechSynthesis.cancel();\r\n\r\n\t// slice complete script at new position and map to readOut\r\n\tscript.slice(position, script.length).map(text => {\r\n\t\ttext && readOut(text, (err, e) => {\r\n\t\t\t\r\n\t\t\tif (err) console.error(err);\r\n\r\n\t\t\tdone(null, e);\r\n\t\t});\r\n\t});\r\n}","import React from \"react\";\n\nconst MoreButton = ({ onClick, text, data }) => {\n\t// data && to prevent crash when using the search feature\n\tconst children = data && data.children;\n\tconst parentId = data && data.parent_id;\n\n\treturn (\n\t\t<button onClick={ e => onClick(e, children, parentId) } className=\"MoreButton\">{ `${text}` }</button>\n\t);\n}\n\nexport default MoreButton;","\"use strict\";\n\n// exports: \n\t// convertListingToScript()\n\t// findInListingAndInsert()\n\t// findIdInListing()\n\n// search\n\n// vote\n\n// sort\n\n// =========== more button functionality ============\n\n// takes listing and additional replies and merges them\nexport function findInListingAndInsert(listing, parentId, ArraytoInsert) {\n\treturn new Promise((resolve, reject) => {\n\n\t\t// the comments object is a \"listing\" and NOT the actual array\n\t\tconst comments = listing[1].data.children;\n\n\t\t// loop through comments\n\t\tcomments.map((comment, i) => {\n\t\t\tif (comment.data.id === parentId && comment.kind !== \"more\") {\n\t\t\t\t\n\t\t\t\t// remove more object\n\t\t\t\tcomment.data.replies.data.children.pop();\n\t\t\t\t// if comment is parent, insert replies and resolve with new listing\n  \t\t\t\tArraytoInsert.map(toInsert => comment.data.replies.data.children.push(toInsert));\n\t\t\t\tresolve(listing);\n\t\t\t}\n\n\t\t\t// comment is not parent, but has replies\n\t\t\tif (comment.data.replies) {\n\n\t\t\t\t// look if a reply is the parent \n\t\t\t\tfindIdInRepliesAndInsert(comment.data.replies, parentId, ArraytoInsert)\n\t\t\t\t.then(listing => listing && resolve(listing))\n\t\t\t\t.catch(err => console.error(err))\n\t\t\t}\n\t\t\t// reject() oder resolve(\"someKindOfErrorMessage\")\n\t\t})\n\n\t})\n\n\t// recursive function\n\tfunction findIdInRepliesAndInsert(replies, parentId, ArraytoInsert) {\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\t// the replies object is a \"listing\" and NOT the actual array\n\t\t\tconst children = replies.data.children;\n\n\t\t\t// loop over children\n\t\t\tchildren.map((child, i) => {\n\t\t\t\t\n\t\t\t\t// check if actual replies and not just links to fetch more replies\n\t\t\t\tif (child.data.id === parentId && child.kind !== \"more\") {\n\n\t\t\t\t\t// remove more object\n\t\t\t\t\tchild.data.replies.data.children.pop();\n\t\t\t\t\t// .then insert replies\n\t  \t\t\t\tArraytoInsert.map(toInsert => child.data.replies.data.children.push(toInsert));\n\t\t\t\t\t\n\t\t\t\t\tresolve(listing);\t\t\t\n\t\t\t\t}\n\t\t\t\t// reply is not parent, but has replies\n\t\t\t\t// call self with the replies of the reply\n\t\t\t\tif (child.data.replies) {\n\n\t\t\t\t\t// look if a reply of reply is the parent \n\t\t\t\t\tfindIdInRepliesAndInsert(child.data.replies, parentId, ArraytoInsert)\n\t\t\t\t\t.then(listing => resolve(listing)) \n\t\t\t\t\t.catch(err => console.err(err))\n\t\t\t\t}\n\t\t\t});\t\n\t\t});\n\t}\n}\n\n// ==================== legacy ======================\n\nexport function findIdInListing(listing, parentId) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst comments = listing[1].data.children;\n\n\t\t// if more comments can be ŕequested via /morechildren => check threadId\n\n\t\tcomments.map((c, i) => {\n\t\t\tif (c.data.id === parentId && c.kind !== \"more\") {\n\t\t\t\tconsole.log(\"parentId:\", parentId);\n\t\t\t\tconsole.log(\"comment:\", c.data);\n\t\t\t\t// console.log(\"\\nreply of comment\\narr to push onto:\\n\", c.data.replies.data.children);\n\n\t\t\t\t// fetch additional comments / replies\n\t\t\t\t// fetch(\"/morechildren\")\n\n\t\t\t\t// .then insert comment / replies\n\t\t\t\t// comments.data.replies.data.children.push()\n\n\t\t\t\tresolve(i.toString());\n\t\t\t}\n\n\t\t\tif (c.data.replies) {\n\t\t\t\tfindIdInReplies(c.data.replies, parentId)\n\t\t\t\t.then(iterators => {\n\t\t\t\t\titerators && resolve(i + iterators) \n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t})\n}\n\n// recursive function\nfunction findIdInReplies(replies, parentId) {\n\treturn new Promise((resolve, reject) => {\n\n\t\t// the replies object is a \"listing\" and NOT the actual array\n\t\tconst children = replies.data.children;\n\n\t\t// loop over children\n\t\tchildren.map((child, i) => {\n\t\t\t\n\t\t\t// check if actual replies and not just links to fetch more replies\n\t\t\tif (child.data.id === parentId && child.kind !== \"more\") {\n\t\t\t\tconsole.log(\"parentId:\", parentId);\n\t\t\t\tconsole.log(\"child:\", child.data);\n\t\t\t\t// console.log(\"\\nchild of child\\narr to push onto:\\n\", child.data.replies.data.children);\n\n\t\t\t\t// fetch additional comments / replies\n\t\t\t\t// fetch(\"/morechildren\")\n\n\t\t\t\t// .then insert replies\n\t\t\t\t// comments.data.replies.data.children.push()\n\t\t\t\tresolve(i.toString());\t\t\t\n\t\t\t}\n\t\t\t// call self with the replies of the reply\n\t\t\tif (child.data.replies) {\n\t\t\t\tfindIdInReplies(child.data.replies, parentId)\n\t\t\t\t.then(iterators => {\n\t\t\t\t\titerators && resolve(i.toString() + iterators) \n\t\t\t\t})\n\t\t\t\t.catch(err => () => console.log(\"reject\"))\n\t\t\t}\n\t\t});\t\n\t});\n}","const decodeHtml = (html) => {\r\n    var txt = document.createElement(\"textarea\");\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n}\r\n\r\nexport default decodeHtml;\r\n  ","import React, { Component } from 'react';\nimport Parser from \"html-react-parser\";\nimport './css/Thread.css';\n\nimport ErrorBox from \"../components/ErrorBox\";\nimport LoadingScreen from \"../components/LoadingScreen\";\nimport AuthorHeader from \"../components/AuthorHeader\";\nimport Synth from \"../components/Synth\";\nimport SortBox from \"../components/SortBox\";\nimport MoreButton from \"../components/MoreButton\";\n\nimport { findIdInListing, findInListingAndInsert } from \"../services/user.service.js\";\nimport convertToHoursAgo from \"../helpers/convertToHoursAgo\";\nimport decodeHtml from \"../helpers/decodeHtml\";\n\nclass Thread extends Component {\n  \tconstructor() {\n\t\tsuper();\n\t\tthis.state = { listing: null, loading: true, toRead: null, sort: \"Best\" }\n\t\tthis.handleSort = this.handleSort.bind(this);\n\t\tthis.handleMore = this.handleMore.bind(this);\n  \t}\n  \t\n  \tcomponentDidMount() {\n  \t\tconst path = this.props.location.pathname;\n  \t\tconst subreddit = path.split(\"/\")[3];\n  \t\tconst id = path.split(\"/\")[4];\n  \t\t\n  \t\tfetch(`https://www.reddit.com/r/${subreddit}/comments/${id}/.json?limit=100`)\n  \t\t.then(res => res.json())\n  \t\t.then(data => this.setState({ listing: data, loading: false }))\n  \t\t.catch(err => {\n  \t\t\tthis.setState({ listing: null, loading: false });\n  \t\t\tconsole.error(err);\n  \t\t})\n  \t}\n\n  \thandleSort(e) {\n    \tthis.setState({ loading: true, sort: e.target.value });\n    \t\n  \t\tconst path = this.props.location.pathname;\n  \t\tconst subreddit = path.split(\"/\")[3];\n  \t\tconst id = path.split(\"/\")[4];\n  \t\t\n  \t\tfetch(`https://www.reddit.com/r/${subreddit}/comments/${id}/.json?sort=${e.target.value}&limit=100`)\n  \t\t.then(res => res.json())\n  \t\t.then(data => this.setState({ listing: data, loading: false }))\n  \t\t.catch(err => this.setState({ listing: err, loading: false }))\n  \t}\n\n  \thandleVote(e) {\n  \t\tconst name = e.target.attributes.name.value;\n  \t\tconst dir = e.target.className === \"fas fa-arrow-up\" ? \"1\" : \"-1\";\n  \t\tconst token = localStorage.getItem(\"access_token\");\n\n  \t\tfetch(`https://oauth.reddit.com/api/vote?id=${name}&dir=${dir}`, {\n  \t\t\tmethod: \"POST\",\n  \t\t  \theaders: {\n  \t\t  \t  Authorization: `bearer ${token}`\n  \t\t  \t}\n  \t\t})\n  \t\t.catch(err => console.error(err))\n  \t\t.then(res => res.json())\n  \t\t.then(data => console.log(data))\t\n\n  \t\te.target.className += \" orange\"\n  \t}\n  \thandleMore(e, children, parentId) {\n  \t\tconst { listing } = this.state;\n  \t\tconst link_id = listing[0].data.children[0].data.id;\n\t\t\n\t\tconst dummyListing = {\n\t\t\tdata: {\n\t\t\t\tauthor: \"ZharkoDK\",\n\t\t\t\tbody: \"No reason to feel bad. I think you dodged a bullet there. \",\n\t\t\t\tid: \"eegen2z\",\n\t\t\t\tlink_id: \"t3_ahm7sd\",\n\t\t\t\tname: \"t1_eegen2z\",\n\t\t\t\tparent_id: \"t1_eeg9fa7\",\n\t\t\t\treplies: { kind: \"Listing\", data: {} },\n\t\t\t\tsubreddit: \"AskReddit\",\n\t\t\t\tsubreddit_id: \"t5_2qh1i\",\n\t\t\t},\n\t\t\tkind: \"t1\"\n\t\t}\n\n\t\tconst dummyMoreObj = {\n\t\t\tdata: {\n\t\t\t\tchildren:[ \"eegl116\" ],\n\t\t\t\tcount: 5,\n\t\t\t\tdepth: 2,\n\t\t\t\tid: \"eegl116\",\n\t\t\t\tname: \"t1_eegl116\",\n\t\t\t\tparent_id: \"t1_eegen2z\"\n\t\t\t},\n\t\t\tkind: \"more\"\n\t\t}\n\n\t\t// console.log(\"link_id:\", link_id)\n\t\tconsole.log(\"children:\", children)\n\t\tconsole.log(\"parentId:\", parentId)\n\n  \t\t// const link_id = link_id; // \"t3_2otg5f\";\n  \t\t// const children = children; // \"cmqj5en\";\n  \t\t// const id = dummyListing.data.name; // \"t1_cmqj5en\";\n\n  \t\t// fetch more replies\n  \t\tfetch(`https://www.reddit.com/api/morechildren.json?link_id=t3_${link_id}&children=${children.join(\", \")}&api_type=json`)\n  \t\t.catch(err => console.error(err))\n  \t\t.then(res => res.json())\n  \t\t.then(data => {\n  \t\t\tconsole.log(\"add. replies:\", data.json);\n\n\t  \t\t// traverse listing to find matching id and append\n  \t\t\t// await findIdInListing(listing, parentId)\n  \t\t\t// or\n  \t\t\t// save nested location somehow for easy inserting\n  \t\t\t\n  \t\t\tfindInListingAndInsert(listing, parentId.substring(3), data.json.data.things)\n  \t\t\t.then(newListing => this.setState({ listing: newListing }))\n  \t\t})\n  \t\t\n  \t\t// comments: listing[1].data.children.data\n  \t\t// replies: replies.data.children.data\n  \t}\n\n  \trender() {\n\t\tconst { listing, loading, sort } = this.state;\n\t\tif (loading) {\n\t\t\treturn ( <LoadingScreen /> );\n\n\t  \t} else if (listing) {\n\t\t\tconst threadInfo = listing[0].data.children[0];\n\t\t\tconst comments = listing[1].data.children;\n\n\t\t\treturn (\n\t\t\t  \t<div className=\"Thread\">\n\t\t\t  \t\t<Synth listing={ listing } />\n\t\t\t  \t\t<div className=\"container\">\n\t\t\t  \t\t\t<ThreadHead { ...threadInfo } handleVote={ this.handleVote } />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<SortBox onChange={ this.handleSort } active={ sort } values={[ \"Best\", \"Top\", \"New\", \"Controversial\",  \"Old\" ]} />\n\t\t\t\t\t\t\t{ comments && comments.map((c, i) => <CommentBox key={i} { ...c } handleVote={ this.handleVote } handleMore={ this.handleMore } />) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t  \t</div>\n\t\t\t);\n\t\t\n\t\t} else {\n\t  \t\treturn ( <ErrorBox /> );\n\t  \t}\n  \t}\n}\n\nexport default Thread;\n\nconst ThreadHead = ({ data, handleVote }) => {\n\treturn (\n\t\t<article className=\"ThreadHead\">\n\t\t\t<AuthorHeader r={ data.subreddit_name_prefixed } author={ data.author } date={ data.created_utc } />\n\n\t\t\t<header>\n\t\t\t\t<h2>{ data.title }</h2>\n\t\t\t</header>\n\n\t\t\t{/* data.media && data.media.reddit_video && <iframe src={ data.media.reddit_video.scrubber_media_url } width={ data.media.reddit_video.width } ></iframe> */}\n\t\t\t{/* data.preview && data.preview.reddit_video_preview && <iframe src={ data.preview.reddit_video_preview.scrubber_media_url } ></iframe> */}\n\t\t\t{/* data.media_embed.content && Parser(decodeHtml(data.media_embed.content)) */}\n\t\t\t{ data.selftext_html ? <div>{ Parser(decodeHtml(data.selftext_html)) }</div> : <p>{ \"This post contains media only. Follow the link to find out more.\" }</p> }\n\t\t\t{ data.url && data.url.slice(0, 23) !== \"https://www.reddit.com/\" && <a href={ data.url } target=\"_blank\" rel=\"noopener noreferrer\"><div>{ data.url.split(\"/\")[2] }</div></a> }\n\n\t\t\t<div className=\"stats\">\n\t\t\t\t<small>{ data.num_comments } Comments</small>\n\t\t\t\t<small className=\"score\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<i className=\"fas fa-arrow-up\" name={ data.name } onClick={ handleVote }></i>\n\t\t\t\t\t\t{ ` ${data.score} Upvotes ` }\n\t\t\t\t\t\t<i className=\"fas fa-arrow-down\" name={ data.name } onClick={ handleVote }></i>\n\t\t\t\t\t</span>\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t</article>\n\t);\n}\n\nconst CommentBox = ({ data, handleVote, handleMore }) => {\n\tif (!data) { console.error(\"\") }\n\tconst hoursAgoStr = data && convertToHoursAgo(data.created_utc*1000);\n\treturn (\n\t\t<div className=\"CommentBox\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<small className=\"author\">{ data.author } &#8226; { hoursAgoStr } </small>\n\t\t\t\t<div>{ Parser(decodeHtml(data.body_html)) }</div>\n\n\t\t\t\t<div className=\"stats\">\n\t\t\t\t\t<small>\n\t\t\t\t\t\t<span>{ `${data.replies ? data.replies.data.children.length : 0} Replies` }</span>\n\t\t\t\t\t</small>\n\t\t\t\t\t<small className=\"score\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-up\" name={ data.name } onClick={ handleVote }></i>\n\t\t\t\t\t\t\t{ ` ${data.score} Upvotes ` }\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-down\" name={ data.name } onClick={ handleVote }></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t{/* loop over replies and check if reply === comment || link id to more*/}\n\t\t\t\t{\n\t\t\t\t\tdata.replies && data.replies.data.children && data.replies.data.children.map((r, i) => r.kind === \"more\" ? \n\t\t\t\t\t\t<MoreButton key={i} { ...r } onClick={ handleMore } text={ `${r.data.count} more replies` } />\n\t\t\t\t\t\t:\n\t\t\t\t\t\tr.data && <CommentBox { ...r } key={i} handleMore={ handleMore } />)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Search.css\";\r\n\r\nimport ThreadBox from \"../components/ThreadBox\";\r\nimport ErrorBox from \"../components/ErrorBox\";\r\nimport LoadingScreen from \"../components/LoadingScreen\";\r\nimport MoreButton from \"../components/MoreButton\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nclass Search extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { loading: true, query: null, posts: null, subreddits: null }\r\n\t}\r\n\tasync componentDidMount() {   \r\n\t\tconst query = this.props.location.pathname.split(\"/\")[3];\r\n\t\tconsole.log(query);\r\n\r\n    \tconst posts = await fetch(`https://www.reddit.com/search.json?q=${query}`);\r\n    \tconst subreddits = await fetch(`https://www.reddit.com/subreddits/search.json?q=${query}`);\r\n\r\n    \tthis.setState({\r\n\t\t\tposts: await posts.json(), \r\n    \t\tsubreddits: await subreddits.json(), \r\n    \t\tloading: false, \r\n    \t\tquery: query\r\n    \t})\r\n\t}\r\n\tasync componentDidUpdate() {\r\n\t\tconst { query, loading } = this.state;\r\n  \t\tconst newQuery = this.props.location.pathname.split(\"/\")[3];\r\n\r\n  \t\tif (!loading && query !== newQuery) {\r\n        \tif (!loading) { this.setState({ loading: true }); }\r\n  \t\t\t\r\n    \t\tconst subreddits = await fetch(`https://www.reddit.com/subreddits/search.json?q=${newQuery}`);\r\n  \t\t\tconst posts = await fetch(`https://www.reddit.com/search.json?q=${newQuery}`);\r\n\t\r\n    \t\tthis.setState({\r\n    \t\t\tsubreddits: await subreddits.json(),\r\n\t\t\t\tposts: await posts.json(),  \r\n    \t\t\tloading: false, \r\n    \t\t\tquery: newQuery\r\n    \t\t})\t\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { posts, subreddits, loading, query } = this.state;\r\n\r\n\t\tif (loading) {\r\n    \t  \treturn ( <LoadingScreen /> );\r\n\t\r\n    \t} else if ((posts && subreddits) || subreddits || posts) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"Search\">\r\n\t\r\n\t\t\t\t\t<header className=\"SearchTitle\">\r\n\t\t\t\t\t\t<h2>Search results for <u>{ query }</u>:</h2>\r\n\t\t\t\t\t</header>\r\n\t\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<section className=\"search-results\">\r\n\t\t\t\t\t\t\t<h3>Subreddits</h3>\r\n\t\t\t\t\t\t\t{ subreddits.data.children[0] ? subreddits.data.children.slice(0, 5).map((c, i) => <SubRedditBoxAlt { ...c } />) : <small>Wow, much empty o.O</small> }\r\n\t\t\t\t\t\t\t<MoreButton onClick={ () => \"\" } text=\"Show more results\" />\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style={{ width: \"100%\", margin: \"20px auto\", borderTop: \"1px solid silver\" }}></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<section className=\"search-results\">\r\n\t\t\t\t\t\t\t<h3>Posts</h3>\r\n\t\t\t\t\t\t\t{ posts.data.children[0] ? posts.data.children.map((c, i) => <ThreadBox { ...c } key={i} />) : <small>Wow, much empty o.O</small> }\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n// if status code || ganz weg\r\n\t\t} else {\r\n\t\t\treturn (<ErrorBox />);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Search;\r\n\r\nconst SubRedditBoxAlt = ({ data }) => {\r\n\treturn (\r\n\t\t<Link to={ `${uri}/r/${data.display_name}` } >\r\n\t\t<div className=\"SubRedditBoxAlt\">\r\n\t\t\t<div className=\"head\">\r\n\t\t\t\t<div className=\"subreddit-box-img\" style={{ backgroundImage: `url(${data.header_img})` }}></div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t<p><b>{ data.display_name_prefixed }</b></p>\r\n\t\t\t\t\t<small>{ data.subscribers } Subscribers</small>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<small className=\"description\">{ data.public_description || data.title }</small>\r\n\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../helpers/history\";\r\nimport \"./css/NavBar.css\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { isHidden: false };    \r\n\t\tthis.onScroll = () => {  \r\n  \t\t    if (window.scrollY > this.prev) {\r\n\t\t\t\tthis.setState({ isHidden: true });\r\n  \t\t    } else {\r\n  \t\t        this.setState({ isHidden: false });\r\n  \t\t    }\r\n  \t\t    this.prev = window.scrollY;\r\n  \t\t}\r\n  \t}\r\n  \tcomponentDidMount() {\r\n  \t  window.addEventListener(\"scroll\", this.onScroll);\r\n  \t}\r\n  \tcomponentWillUnmount() {\r\n  \t  window.removeEventListener(\"scroll\", this.onScroll);\r\n  \t}\r\n\r\n  \trender() {\r\n\t\tconst { REACT_APP_DURATION, REACT_APP_SCOPE, REACT_APP_SECRET_STRING } = process.env;\r\n\t\tconst CLIENT_ID = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_CLIENT_ID : process.env.REACT_APP_CLIENT_ID_DEV;\r\n\t\tconst URI = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_URI : process.env.REACT_APP_URI_DEV;\r\n\t\tconst { loggedIn, user, handleSideBar, onSubmit } = this.props;\r\n\t\tconst { isHidden } = this.state;\r\n\t\r\n\t\treturn (\r\n\t\t\t<nav  className={ isHidden ? \"navbar hide\" : \"navbar\" } >\r\n\t\t\t\t\r\n\t\t\t\t<i onClick={ handleSideBar } className=\"fas fa-bars\"></i>\r\n\t\t\t\t\r\n\t\t\t\t<Link to={`${uri}/`} className=\"link\"><div className=\"logo\">For Reddit To Go</div></Link>\t\r\n\t\r\n\t\t\t\t<form onSubmit={ onSubmit } >\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"search reddit\" />\r\n\t\t\t\t\t<button type=\"submit\"><i className=\"fas fa-search\"></i></button>\r\n\t\t\t\t</form>\r\n\t\r\n\t\t\t\t<div className=\"login-user-field\">\r\n\t\t\t\t{ loggedIn && user ?\r\n\t\t\t\t\t<UserBox user={ user } />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<a className=\"login-btn\"\r\n\t\t\t\t\t\thref={ `https://www.reddit.com/api/v1/authorize\r\n\t\t\t\t\t\t?client_id=${CLIENT_ID}\r\n\t\t\t\t\t\t&response_type=token\r\n\t\t\t\t\t\t&state=${REACT_APP_SECRET_STRING}\r\n\t\t\t\t\t\t&redirect_uri=${URI}\r\n\t\t\t\t\t\t&duration=${REACT_APP_DURATION}\r\n\t\t\t\t\t\t&scope=${REACT_APP_SCOPE}` }>\r\n\t\t\t\t\t    <i className=\"fas fa-user\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavBar;\r\n\r\nconst UserBox = ({ user }) => {\r\n\treturn (\r\n\t\t<div className=\"UserBox\">\r\n\t\t\t<div className=\"name-karma-container\">\r\n\t\t\t\t<div className=\"name\">{ user.name }</div>\r\n\t\t\t\t<div className=\"karma\">{ user.karma } Karma</div>\r\n\t\t\t</div>\r\n\t\t\t<img src={ user.img } alt=\"user_image\" />\r\n\t\t\t<button onClick={ () => {localStorage.removeItem(\"access_token\");history.push(\"/ForRedditToGo\")} } className=\"logout-btn\">Logout</button>\r\n\t\t</div>\r\n\t);\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/SubRedditTab.css\";\r\n\r\nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\r\n\r\nconst SubRedditTab  = ({ subreddits, isOpen, handleSideBar, loggedIn }) => {\r\n\treturn (\r\n\t\t<div className={ isOpen ? \"SubRedditTab SubRedditTab-active\" : \"SubRedditTab\" }>\r\n\t\t\t<div className=\"sub-reddit-tab-top\">\r\n\t\t\t\t<Link className=\"logo\" to={ `${uri}/` } onClick={ handleSideBar }>For Reddit To Go</Link>\r\n\t\t\t\t<i className=\"fas fa-times\" onClick={ handleSideBar }></i>\r\n\t\t\t</div>\t\r\n\t\t\t{ subreddits && subreddits.map((sub, i) => <SubRedditBox handleSideBar={ handleSideBar } key={i} { ...sub } />)}\r\n\t\t\t{ !subreddits && <div className=\"not-logged-in\">Log in to see a list of your subscribed subreddits.</div> }\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SubRedditTab;\r\n\r\n\r\nconst SubRedditBox = ({ data, handleSideBar }) => {\r\n\r\n\treturn (\r\n\t\t<Link to={ `${uri}/r/${data.display_name}` } onClick={ handleSideBar } className=\"subreddit-box\">\r\n\t\t\t<div className=\"subreddit-box-img\" style={{ backgroundImage: `url(${data.header_img})` }}></div>\r\n\t\t\t<h3>{ data.display_name_prefixed }</h3>\r\n\t\t</Link>\r\n\t);\r\n}","import React, { Component } from 'react';\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"./helpers/history\";\nimport './App.css';\n\n// import config from \"./config\";\nimport getHashValue from \"./helpers/getHashValue\";\n\nimport Home from \"./containers/Home\";\nimport Sub from \"./containers/Sub\";\nimport Thread from \"./containers/Thread\";\nimport Search from \"./containers/Search\";\n\nimport NavBar from \"./components/NavBar\";\nimport SubRedditTab from \"./components/SubRedditTab\";\n      \nconst uri =  process.env.NODE_ENV === \"production\" ? \"/ForRedditToGo\" : \"/x\";\n\nclass App extends Component {\n  \tconstructor() {\n\t\tsuper();\n\t\tthis.state = { user: null, mySubreddits: null, loggedIn: false, sidebarIsOpen: false }\n    this.handleSideBar = this.handleSideBar.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  \t}\n\n  \tcomponentDidMount() {\n\n\n\n      const accessToken = localStorage.getItem(\"access_token\");\n\n  \t\t// check and parse url | values: access_token, token_type, state, expires_in, scope\n  \t\tconst token = getHashValue(\"access_token\");\n  \t\tconst state = getHashValue(\"state\");\n  \n  \t\t// validate request and origin\n  \t\tif (token && state === process.env.REACT_APP_SECRET_STRING) {\n  \t\t\tconsole.log(\"successfully logged in\");\n  \t\t\tlocalStorage.setItem(\"access_token\", token);\n  \t\t\t\n  \t\t\t// fetch user info\n        fetchUser(token)\n        .then(res => res.json())\n        .then(data => this.setState({ user: data }))\n        .catch(err => console.error(err))\n  \n  \t\t\tfetchMySubs(token)\n  \t\t\t.then(res => res.json())\n  \t\t\t.then(data => this.setState({ mySubreddits: data.data.children, loggedIn: true }))\n        .catch(err => console.error(err))\n  \t\t}\n\n      // if no params in url check localStorage\n      if (accessToken) {\n\n        // fetch user info\n        fetchUser(accessToken)\n        .then(res => res.json())\n        .then(data => this.setState({ user: data }))\n        .catch(err => console.error(err))\n\n        fetchMySubs(accessToken)\n        .then(res => res.json())\n        .then(data => this.setState({ mySubreddits: data.data.children, loggedIn: true }))\n        .catch(err => console.error(err))\n      }\n  \t}\n\n    handleSideBar(e) {\n      this.state.sidebarIsOpen ? \n        this.setState({ sidebarIsOpen: false })\n        :\n        this.setState({ sidebarIsOpen: true });\n    }\n\n  \thandleSearch(e) {\n      e.preventDefault();\n      const query = e.target[0].value;\n      history.push(`${uri}/search/${query}`)\n    }\n\n  \trender() {\n\t\t  const { mySubreddits, loggedIn, user, sidebarIsOpen } = this.state;\n      const sanitizedUser = user ? { name: user.name, karma: user.comment_karma, img: user.icon_img } : null;\n  \n      return (\n\t\t  \t<Router history={ history }>\n\t\t    \t\n          <div className=\"App\">\n\t\t  \t\t  <NavBar loggedIn={ loggedIn } user={ sanitizedUser } handleSideBar={ this.handleSideBar } onSubmit={ this.handleSearch } />\n    \n\t\t  \t\t  <SubRedditTab subreddits={ mySubreddits } isOpen={ sidebarIsOpen } handleSideBar={ this.handleSideBar } />\n    \n\t\t  \t\t  <Switch>\n\t\t  \t\t  \t<Route exact path={ `${uri}/` } component={ props => <Home mySubreddits={ mySubreddits } loggedIn={ loggedIn } { ...props } /> } />\n\t\t  \t\t  \t<Route path={ `${uri}/r/:subreddit/:title` } component={Thread} />\n              <Route path={ `${uri}/r` } component={Sub} />\n              <Route path={ `${uri}/search/:query` } component={Search} />\n\t\t  \t\t  </Switch>\t\n\t\t    \t</div>\n          \n\t\t    </Router>\n\t\t  );\n  \t}\n}\n\nexport default App;\n\n// /subreddits/mine/subscriber\n\nconst fetchUser = (token) => {\n  const options = {\n    headers: {\n      Authorization: `bearer ${token}`\n    }\n  }\n  return fetch(`https://oauth.reddit.com/api/v1/me`, options)\n}\n\nconst fetchMySubs = (token) => {\n  const options = {\n    headers: {\n      Authorization: `bearer ${token}`\n    }\n  }\n  return fetch(`https://oauth.reddit.com/subreddits/mine/subscriber`, options)\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}